"use strict";(self.webpackChunktypescript_eslint_chinese=self.webpackChunktypescript_eslint_chinese||[]).push([[6314],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=p(n),d=a,f=m["".concat(s,".").concat(d)]||m[d]||u[d]||o;return n?r.createElement(f,l(l({ref:t},c),{},{components:n})):r.createElement(f,l({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var p=2;p<o;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9820:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return i},metadata:function(){return p},toc:function(){return u}});var r=n(3117),a=n(102),o=(n(7294),n(3905)),l=["components"],i={},s="comma-dangle",p={unversionedId:"comma-dangle",id:"comma-dangle",title:"comma-dangle",description:"Requires or disallows trailing commas.",source:"@site/rules/comma-dangle.md",sourceDirName:".",slug:"/comma-dangle",permalink:"/typescript-eslint-chinese/rules/comma-dangle",draft:!1,tags:[],version:"current",lastUpdatedBy:"GEARLESS JOE",lastUpdatedAt:1657186506,formattedLastUpdatedAt:"2022\u5e747\u67087\u65e5",frontMatter:{},sidebar:"rules",previous:{title:"class-literal-property-style",permalink:"/typescript-eslint-chinese/rules/class-literal-property-style"},next:{title:"comma-spacing",permalink:"/typescript-eslint-chinese/rules/comma-spacing"}},c={},u=[{value:"Rule Details",id:"rule-details",level:2},{value:"Rule Changes",id:"rule-changes",level:2},{value:"Options",id:"options",level:2}],m={toc:u};function d(e){var t=e.components,n=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"comma-dangle"},(0,o.kt)("inlineCode",{parentName:"h1"},"comma-dangle")),(0,o.kt)("p",null,"Requires or disallows trailing commas."),(0,o.kt)("h2",{id:"rule-details"},"Rule Details"),(0,o.kt)("p",null,"This rule extends the base ",(0,o.kt)("a",{parentName:"p",href:"https://eslint.org/docs/rules/comma-dangle"},(0,o.kt)("inlineCode",{parentName:"a"},"eslint/comma-dangle"))," rule.\nIt adds support for TypeScript syntax."),(0,o.kt)("p",null,"See the ",(0,o.kt)("a",{parentName:"p",href:"https://eslint.org/docs/rules/comma-dangle"},"ESLint documentation")," for more details on the ",(0,o.kt)("inlineCode",{parentName:"p"},"comma-dangle")," rule."),(0,o.kt)("h2",{id:"rule-changes"},"Rule Changes"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsonc"},'{\n  // note you must disable the base rule as it can report incorrect errors\n  "comma-dangle": "off",\n  "@typescript-eslint/comma-dangle": ["error"]\n}\n')),(0,o.kt)("p",null,"In addition to the options supported by the ",(0,o.kt)("inlineCode",{parentName:"p"},"comma-dangle")," rule in ESLint core, the rule adds the following options:"),(0,o.kt)("h2",{id:"options"},"Options"),(0,o.kt)("p",null,"This rule has a string option and an object option."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Object option:"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'"enums"')," is for trailing comma in enum. (e.g. ",(0,o.kt)("inlineCode",{parentName:"li"},"enum Foo = {Bar,}"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'"generics"')," is for trailing comma in generic. (e.g. ",(0,o.kt)("inlineCode",{parentName:"li"},"function foo<T,>() {}"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'"tuples"')," is for trailing comma in tuple. (e.g. ",(0,o.kt)("inlineCode",{parentName:"li"},"type Foo = [string,]"),")"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"https://eslint.org/docs/rules/comma-dangle#options"},"See the other options allowed")))),(0,o.kt)("sup",null,(0,o.kt)("p",null,"Taken with \u2764\ufe0f ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/eslint/eslint/blob/main/docs/rules/comma-dangle.md"},"from ESLint core"))))}d.isMDXComponent=!0}}]);