"use strict";(self.webpackChunktypescript_eslint_chinese=self.webpackChunktypescript_eslint_chinese||[]).push([[2758],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return m}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(t),m=o,h=d["".concat(l,".").concat(m)]||d[m]||u[m]||i;return t?r.createElement(h,a(a({ref:n},p),{},{components:t})):r.createElement(h,a({ref:n},p))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=d;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var c=2;c<i;c++)a[c]=t[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},1764:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return u}});var r=t(3117),o=t(102),i=(t(7294),t(3905)),a=["components"],s={},l="no-misused-promises",c={unversionedId:"no-misused-promises",id:"no-misused-promises",title:"no-misused-promises",description:"Disallows Promises in places not designed to handle them.",source:"@site/rules/no-misused-promises.md",sourceDirName:".",slug:"/no-misused-promises",permalink:"/typescript-eslint-chinese/rules/no-misused-promises",draft:!1,tags:[],version:"current",lastUpdatedBy:"GEARLESS JOE",lastUpdatedAt:1657247748,formattedLastUpdatedAt:"2022\u5e747\u67088\u65e5",frontMatter:{},sidebar:"rules",previous:{title:"no-misused-new",permalink:"/typescript-eslint-chinese/rules/no-misused-new"},next:{title:"no-namespace",permalink:"/typescript-eslint-chinese/rules/no-namespace"}},p={},u=[{value:"Rule Details",id:"rule-details",level:2},{value:"Options",id:"options",level:2},{value:"<code>&quot;checksConditionals&quot;</code>",id:"checksconditionals",level:3},{value:"<code>&quot;checksVoidReturn&quot;</code>",id:"checksvoidreturn",level:3},{value:"<code>&quot;checksSpreads&quot;</code>",id:"checksspreads",level:3},{value:"<code>checksConditionals: true</code>",id:"checksconditionals-true",level:3},{value:"\u274c Incorrect",id:"-incorrect",level:4},{value:"\u2705 Correct",id:"-correct",level:4},{value:"<code>checksVoidReturn: true</code>",id:"checksvoidreturn-true",level:3},{value:"\u274c Incorrect",id:"-incorrect-1",level:4},{value:"\u2705 Correct",id:"-correct-1",level:4},{value:"<code>checksSpreads: true</code>",id:"checksspreads-true",level:3},{value:"\u274c Incorrect",id:"-incorrect-2",level:4},{value:"\u2705 Correct",id:"-correct-2",level:4},{value:"When Not To Use It",id:"when-not-to-use-it",level:2},{value:"Further Reading",id:"further-reading",level:2},{value:"Related To",id:"related-to",level:2}],d={toc:u};function m(e){var n=e.components,t=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"no-misused-promises"},(0,i.kt)("inlineCode",{parentName:"h1"},"no-misused-promises")),(0,i.kt)("p",null,"Disallows Promises in places not designed to handle them."),(0,i.kt)("p",null,"This rule forbids providing Promises to logical locations such as if statements in places where the TypeScript compiler allows them but they are not handled properly.\nThese situations can often arise due to a missing ",(0,i.kt)("inlineCode",{parentName:"p"},"await")," keyword or just a misunderstanding of the way async\nfunctions are handled/awaited."),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("inlineCode",{parentName:"p"},"no-misused-promises")," only detects code that provides Promises to incorrect ",(0,i.kt)("em",{parentName:"p"},"logical")," locations.\nSee ",(0,i.kt)("a",{parentName:"p",href:"/typescript-eslint-chinese/rules/no-floating-promises"},(0,i.kt)("inlineCode",{parentName:"a"},"no-floating-promises"))," for detecting unhandled Promise ",(0,i.kt)("em",{parentName:"p"},"statements"),".")),(0,i.kt)("h2",{id:"rule-details"},"Rule Details"),(0,i.kt)("p",null,"This rule accepts a single option which is an object with ",(0,i.kt)("inlineCode",{parentName:"p"},"checksConditionals"),",\n",(0,i.kt)("inlineCode",{parentName:"p"},"checksVoidReturn"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"checksSpreads")," properties indicating which types of\nmisuse to flag. All are enabled by default."),(0,i.kt)("h2",{id:"options"},"Options"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"type Options = [\n  {\n    checksConditionals?: boolean;\n    checksVoidReturn?: boolean | ChecksVoidReturnOptions;\n    checksSpreads?: boolean;\n  }\n];\n\ninterface ChecksVoidReturnOptions {\n  arguments?: boolean;\n  attributes?: boolean;\n  properties?: boolean;\n  returns?: boolean;\n  variables?: boolean;\n}\n\nconst defaultOptions: Options = [\n  {\n    checksConditionals: true,\n    checksVoidReturn: true,\n    checksSpreads: true,\n  },\n];\n")),(0,i.kt)("h3",{id:"checksconditionals"},(0,i.kt)("inlineCode",{parentName:"h3"},'"checksConditionals"')),(0,i.kt)("p",null,"If you don't want to check conditionals, you can configure the rule with ",(0,i.kt)("inlineCode",{parentName:"p"},'"checksConditionals": false'),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "@typescript-eslint/no-misused-promises": [\n    "error",\n    {\n      "checksConditionals": false\n    }\n  ]\n}\n')),(0,i.kt)("p",null,"Doing so prevents the rule from looking at code like ",(0,i.kt)("inlineCode",{parentName:"p"},"if (somePromise)"),"."),(0,i.kt)("h3",{id:"checksvoidreturn"},(0,i.kt)("inlineCode",{parentName:"h3"},'"checksVoidReturn"')),(0,i.kt)("p",null,"Likewise, if you don't want functions that return promises where a void return is\nexpected to be checked, your configuration will look like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "@typescript-eslint/no-misused-promises": [\n    "error",\n    {\n      "checksVoidReturn": false\n    }\n  ]\n}\n')),(0,i.kt)("p",null,"You can disable selective parts of the ",(0,i.kt)("inlineCode",{parentName:"p"},"checksVoidReturn")," option by providing an object that disables specific checks.\nThe following options are supported:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"arguments"),": Disables checking an asynchronous function passed as argument where the parameter type expects a function that returns ",(0,i.kt)("inlineCode",{parentName:"li"},"void")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"attributes"),": Disables checking an asynchronous function passed as a JSX attribute expected to be a function that returns ",(0,i.kt)("inlineCode",{parentName:"li"},"void")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"properties"),": Disables checking an asynchronous function passed as an object property expected to be a function that returns ",(0,i.kt)("inlineCode",{parentName:"li"},"void")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"returns"),": Disables checking an asynchronous function returned in a function whose return type is a function that returns ",(0,i.kt)("inlineCode",{parentName:"li"},"void")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"variables"),": Disables checking an asynchronous function used as a variable whose return type is a function that returns ",(0,i.kt)("inlineCode",{parentName:"li"},"void"))),(0,i.kt)("p",null,"For example, if you don't mind that passing a ",(0,i.kt)("inlineCode",{parentName:"p"},"() => Promise<void>")," to a ",(0,i.kt)("inlineCode",{parentName:"p"},"() => void")," parameter or JSX attribute can lead to a floating unhandled Promise:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "@typescript-eslint/no-misused-promises": [\n    "error",\n    {\n      "checksVoidReturn": {\n        "arguments": false,\n        "attributes": false\n      }\n    }\n  ]\n}\n')),(0,i.kt)("h3",{id:"checksspreads"},(0,i.kt)("inlineCode",{parentName:"h3"},'"checksSpreads"')),(0,i.kt)("p",null,"If you don't want to check object spreads, you can add this configuration:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "@typescript-eslint/no-misused-promises": [\n    "error",\n    {\n      "checksSpreads": false\n    }\n  ]\n}\n')),(0,i.kt)("h3",{id:"checksconditionals-true"},(0,i.kt)("inlineCode",{parentName:"h3"},"checksConditionals: true")),(0,i.kt)("p",null,"Examples of code for this rule with ",(0,i.kt)("inlineCode",{parentName:"p"},"checksConditionals: true"),":"),(0,i.kt)("h4",{id:"-incorrect"},"\u274c Incorrect"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'const promise = Promise.resolve("value");\n\nif (promise) {\n  // Do something\n}\n\nconst val = promise ? 123 : 456;\n\nwhile (promise) {\n  // Do something\n}\n')),(0,i.kt)("h4",{id:"-correct"},"\u2705 Correct"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'const promise = Promise.resolve("value");\n\n// Always `await` the Promise in a conditional\nif (await promise) {\n  // Do something\n}\n\nconst val = (await promise) ? 123 : 456;\n\nwhile (await promise) {\n  // Do something\n}\n')),(0,i.kt)("h3",{id:"checksvoidreturn-true"},(0,i.kt)("inlineCode",{parentName:"h3"},"checksVoidReturn: true")),(0,i.kt)("p",null,"Examples of code for this rule with ",(0,i.kt)("inlineCode",{parentName:"p"},"checksVoidReturn: true"),":"),(0,i.kt)("h4",{id:"-incorrect-1"},"\u274c Incorrect"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'[1, 2, 3].forEach(async (value) => {\n  await doSomething(value);\n});\n\nnew Promise(async (resolve, reject) => {\n  await doSomething();\n  resolve();\n});\n\nconst eventEmitter = new EventEmitter();\neventEmitter.on("some-event", async () => {\n  synchronousCall();\n  await doSomething();\n  otherSynchronousCall();\n});\n')),(0,i.kt)("h4",{id:"-correct-1"},"\u2705 Correct"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'// for-of puts `await` in outer context\nfor (const value of [1, 2, 3]) {\n  await doSomething(value);\n}\n\n// If outer context is not `async`, handle error explicitly\nPromise.all(\n  [1, 2, 3].map(async (value) => {\n    await doSomething(value);\n  })\n).catch(handleError);\n\n// Use an async IIFE wrapper\nnew Promise((resolve, reject) => {\n  // combine with `void` keyword to tell `no-floating-promises` rule to ignore unhandled rejection\n  void (async () => {\n    await doSomething();\n    resolve();\n  })();\n});\n\n// Name the async wrapper to call it later\nconst eventEmitter = new EventEmitter();\neventEmitter.on("some-event", () => {\n  const handler = async () => {\n    await doSomething();\n    otherSynchronousCall();\n  };\n\n  try {\n    synchronousCall();\n  } catch (err) {\n    handleSpecificError(err);\n  }\n\n  handler().catch(handleError);\n});\n')),(0,i.kt)("h3",{id:"checksspreads-true"},(0,i.kt)("inlineCode",{parentName:"h3"},"checksSpreads: true")),(0,i.kt)("p",null,"Examples of code for this rule with ",(0,i.kt)("inlineCode",{parentName:"p"},"checksSpreads: true"),":"),(0,i.kt)("h4",{id:"-incorrect-2"},"\u274c Incorrect"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'const getData = () => someAsyncOperation({ myArg: "foo" });\n\nreturn { foo: 42, ...getData() };\n\nconst getData2 = async () => {\n  await someAsyncOperation({ myArg: "foo" });\n};\n\nreturn { foo: 42, ...getData2() };\n')),(0,i.kt)("h4",{id:"-correct-2"},"\u2705 Correct"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'const getData = () => someAsyncOperation({ myArg: "foo" });\n\nreturn { foo: 42, ...(await getData()) };\n\nconst getData2 = async () => {\n  await someAsyncOperation({ myArg: "foo" });\n};\n\nreturn { foo: 42, ...(await getData2()) };\n')),(0,i.kt)("h2",{id:"when-not-to-use-it"},"When Not To Use It"),(0,i.kt)("p",null,"If you do not use Promises in your codebase or are not concerned with possible\nmisuses of them outside of what the TypeScript compiler will check."),(0,i.kt)("h2",{id:"further-reading"},"Further Reading"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/Microsoft/TypeScript/wiki/FAQ#why-are-functions-returning-non-void-assignable-to-function-returning-void"},"TypeScript void function assignability"))),(0,i.kt)("h2",{id:"related-to"},"Related To"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/typescript-eslint-chinese/rules/no-floating-promises"},(0,i.kt)("inlineCode",{parentName:"a"},"no-floating-promises")))))}m.isMDXComponent=!0}}]);