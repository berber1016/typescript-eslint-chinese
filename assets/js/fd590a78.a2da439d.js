"use strict";(self.webpackChunktypescript_eslint_chinese=self.webpackChunktypescript_eslint_chinese||[]).push([[7674],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=p(n),d=o,f=m["".concat(s,".").concat(d)]||m[d]||c[d]||i;return n?r.createElement(f,a(a({ref:t},u),{},{components:n})):r.createElement(f,a({ref:t},u))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var p=2;p<i;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8086:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return c}});var r=n(3117),o=n(102),i=(n(7294),n(3905)),a=["components"],l={},s="no-floating-promises",p={unversionedId:"no-floating-promises",id:"no-floating-promises",title:"no-floating-promises",description:"Requires Promise-like statements to be handled appropriately.",source:"@site/rules/no-floating-promises.md",sourceDirName:".",slug:"/no-floating-promises",permalink:"/typescript-eslint-chinese/rules/no-floating-promises",draft:!1,tags:[],version:"current",lastUpdatedBy:"GEARLESS JOE",lastUpdatedAt:1657247748,formattedLastUpdatedAt:"2022\u5e747\u67088\u65e5",frontMatter:{},sidebar:"rules",previous:{title:"no-extraneous-class",permalink:"/typescript-eslint-chinese/rules/no-extraneous-class"},next:{title:"no-for-in-array",permalink:"/typescript-eslint-chinese/rules/no-for-in-array"}},u={},c=[{value:"Rule Details",id:"rule-details",level:2},{value:"\u274c Incorrect",id:"-incorrect",level:3},{value:"\u2705 Correct",id:"-correct",level:3},{value:"Options",id:"options",level:2},{value:"<code>ignoreVoid</code>",id:"ignorevoid",level:3},{value:"<code>ignoreIIFE</code>",id:"ignoreiife",level:3},{value:"When Not To Use It",id:"when-not-to-use-it",level:2},{value:"Related To",id:"related-to",level:2}],m={toc:c};function d(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"no-floating-promises"},(0,i.kt)("inlineCode",{parentName:"h1"},"no-floating-promises")),(0,i.kt)("p",null,"Requires Promise-like statements to be handled appropriately."),(0,i.kt)("p",null,'A "floating" Promise is one that is created without any code set up to handle any errors it might throw.'),(0,i.kt)("p",null,"Floating Promises can cause several issues, such as improperly sequenced operations, ignored Promise rejections, and more."),(0,i.kt)("p",null,"Valid ways of handling a Promise-valued statement include:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"await"),"ing it"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"return"),"ing it"),(0,i.kt)("li",{parentName:"ul"},"Calling its ",(0,i.kt)("inlineCode",{parentName:"li"},".then()")," with two arguments"),(0,i.kt)("li",{parentName:"ul"},"Calling its ",(0,i.kt)("inlineCode",{parentName:"li"},".catch()")," with one argument")),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("inlineCode",{parentName:"p"},"no-floating-promises")," only detects unhandled Promise ",(0,i.kt)("em",{parentName:"p"},"statements"),".\nSee ",(0,i.kt)("a",{parentName:"p",href:"/typescript-eslint-chinese/rules/no-misused-promises"},(0,i.kt)("inlineCode",{parentName:"a"},"no-misused-promises"))," for detecting code that provides Promises to ",(0,i.kt)("em",{parentName:"p"},"logical")," locations such as if statements.")),(0,i.kt)("h2",{id:"rule-details"},"Rule Details"),(0,i.kt)("p",null,"Examples of code for this rule:"),(0,i.kt)("h3",{id:"-incorrect"},"\u274c Incorrect"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'const promise = new Promise((resolve, reject) => resolve("value"));\npromise;\n\nasync function returnsPromise() {\n  return "value";\n}\nreturnsPromise().then(() => {});\n\nPromise.reject("value").catch();\n\nPromise.reject("value").finally();\n')),(0,i.kt)("h3",{id:"-correct"},"\u2705 Correct"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'const promise = new Promise((resolve, reject) => resolve("value"));\nawait promise;\n\nasync function returnsPromise() {\n  return "value";\n}\nreturnsPromise().then(\n  () => {},\n  () => {}\n);\n\nPromise.reject("value").catch(() => {});\n\nPromise.reject("value").finally(() => {});\n')),(0,i.kt)("h2",{id:"options"},"Options"),(0,i.kt)("p",null,"The rule accepts an options object with the following properties:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"type Options = {\n  // if true, checking void expressions will be skipped\n  ignoreVoid?: boolean;\n  // if true, checking for async iife will be skipped\n  ignoreIIFE?: boolean;\n};\n\nconst defaults = {\n  ignoreVoid: true,\n  ignoreIIFE: false,\n};\n")),(0,i.kt)("h3",{id:"ignorevoid"},(0,i.kt)("inlineCode",{parentName:"h3"},"ignoreVoid")),(0,i.kt)("p",null,"This allows you to stop the rule reporting promises consumed with void operator.\nThis can be a good way to explicitly mark a promise as intentionally not awaited."),(0,i.kt)("p",null,"Examples of ",(0,i.kt)("strong",{parentName:"p"},"correct")," code for this rule with ",(0,i.kt)("inlineCode",{parentName:"p"},"{ ignoreVoid: true }"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'async function returnsPromise() {\n  return "value";\n}\nvoid returnsPromise();\n\nvoid Promise.reject("value");\n')),(0,i.kt)("p",null,"With this option set to ",(0,i.kt)("inlineCode",{parentName:"p"},"true"),", and if you are using ",(0,i.kt)("inlineCode",{parentName:"p"},"no-void"),", you should turn on the ",(0,i.kt)("a",{parentName:"p",href:"https://eslint.org/docs/rules/no-void#allowasstatement"},(0,i.kt)("inlineCode",{parentName:"a"},"allowAsStatement"))," option."),(0,i.kt)("h3",{id:"ignoreiife"},(0,i.kt)("inlineCode",{parentName:"h3"},"ignoreIIFE")),(0,i.kt)("p",null,"This allows you to skip checking of async IIFEs (Immediately Invocated function Expressions)."),(0,i.kt)("p",null,"Examples of ",(0,i.kt)("strong",{parentName:"p"},"correct")," code for this rule with ",(0,i.kt)("inlineCode",{parentName:"p"},"{ ignoreIIFE: true }"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"await(async function () {\n  await res(1);\n})();\n\n(async function () {\n  await res(1);\n})();\n")),(0,i.kt)("h2",{id:"when-not-to-use-it"},"When Not To Use It"),(0,i.kt)("p",null,"If you do not use Promise-like values in your codebase, or want to allow them to remain unhandled."),(0,i.kt)("h2",{id:"related-to"},"Related To"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/typescript-eslint-chinese/rules/no-misused-promises"},(0,i.kt)("inlineCode",{parentName:"a"},"no-misused-promises"))),(0,i.kt)("li",{parentName:"ul"},"TSLint: ",(0,i.kt)("a",{parentName:"li",href:"https://palantir.github.io/tslint/rules/no-floating-promises/"},"'no-floating-promises'"))))}d.isMDXComponent=!0}}]);