"use strict";(self.webpackChunktypescript_eslint_chinese=self.webpackChunktypescript_eslint_chinese||[]).push([[4736],{4608:function(e){e.exports=JSON.parse('{"pluginId":"rules-docs","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"rules":[{"type":"link","label":"Overview","href":"/typescript-eslint-chinese/rules/","docId":"README"},{"type":"link","label":"adjacent-overload-signatures","href":"/typescript-eslint-chinese/rules/adjacent-overload-signatures","docId":"adjacent-overload-signatures"},{"type":"link","label":"array-type","href":"/typescript-eslint-chinese/rules/array-type","docId":"array-type"},{"type":"link","label":"await-thenable","href":"/typescript-eslint-chinese/rules/await-thenable","docId":"await-thenable"},{"type":"link","label":"ban-ts-comment","href":"/typescript-eslint-chinese/rules/ban-ts-comment","docId":"ban-ts-comment"},{"type":"link","label":"ban-tslint-comment","href":"/typescript-eslint-chinese/rules/ban-tslint-comment","docId":"ban-tslint-comment"},{"type":"link","label":"ban-types","href":"/typescript-eslint-chinese/rules/ban-types","docId":"ban-types"},{"type":"link","label":"brace-style","href":"/typescript-eslint-chinese/rules/brace-style","docId":"brace-style"},{"type":"link","label":"camelcase","href":"/typescript-eslint-chinese/rules/camelcase","docId":"camelcase"},{"type":"link","label":"class-literal-property-style","href":"/typescript-eslint-chinese/rules/class-literal-property-style","docId":"class-literal-property-style"},{"type":"link","label":"comma-dangle","href":"/typescript-eslint-chinese/rules/comma-dangle","docId":"comma-dangle"},{"type":"link","label":"comma-spacing","href":"/typescript-eslint-chinese/rules/comma-spacing","docId":"comma-spacing"},{"type":"link","label":"consistent-generic-constructors","href":"/typescript-eslint-chinese/rules/consistent-generic-constructors","docId":"consistent-generic-constructors"},{"type":"link","label":"consistent-indexed-object-style","href":"/typescript-eslint-chinese/rules/consistent-indexed-object-style","docId":"consistent-indexed-object-style"},{"type":"link","label":"consistent-type-assertions","href":"/typescript-eslint-chinese/rules/consistent-type-assertions","docId":"consistent-type-assertions"},{"type":"link","label":"consistent-type-definitions","href":"/typescript-eslint-chinese/rules/consistent-type-definitions","docId":"consistent-type-definitions"},{"type":"link","label":"consistent-type-exports","href":"/typescript-eslint-chinese/rules/consistent-type-exports","docId":"consistent-type-exports"},{"type":"link","label":"consistent-type-imports","href":"/typescript-eslint-chinese/rules/consistent-type-imports","docId":"consistent-type-imports"},{"type":"link","label":"default-param-last","href":"/typescript-eslint-chinese/rules/default-param-last","docId":"default-param-last"},{"type":"link","label":"dot-notation","href":"/typescript-eslint-chinese/rules/dot-notation","docId":"dot-notation"},{"type":"link","label":"explicit-function-return-type","href":"/typescript-eslint-chinese/rules/explicit-function-return-type","docId":"explicit-function-return-type"},{"type":"link","label":"explicit-member-accessibility","href":"/typescript-eslint-chinese/rules/explicit-member-accessibility","docId":"explicit-member-accessibility"},{"type":"link","label":"explicit-module-boundary-types","href":"/typescript-eslint-chinese/rules/explicit-module-boundary-types","docId":"explicit-module-boundary-types"},{"type":"link","label":"func-call-spacing","href":"/typescript-eslint-chinese/rules/func-call-spacing","docId":"func-call-spacing"},{"type":"link","label":"indent","href":"/typescript-eslint-chinese/rules/indent","docId":"indent"},{"type":"link","label":"init-declarations","href":"/typescript-eslint-chinese/rules/init-declarations","docId":"init-declarations"},{"type":"link","label":"keyword-spacing","href":"/typescript-eslint-chinese/rules/keyword-spacing","docId":"keyword-spacing"},{"type":"link","label":"lines-between-class-members","href":"/typescript-eslint-chinese/rules/lines-between-class-members","docId":"lines-between-class-members"},{"type":"link","label":"member-delimiter-style","href":"/typescript-eslint-chinese/rules/member-delimiter-style","docId":"member-delimiter-style"},{"type":"link","label":"member-ordering","href":"/typescript-eslint-chinese/rules/member-ordering","docId":"member-ordering"},{"type":"link","label":"method-signature-style","href":"/typescript-eslint-chinese/rules/method-signature-style","docId":"method-signature-style"},{"type":"link","label":"naming-convention","href":"/typescript-eslint-chinese/rules/naming-convention","docId":"naming-convention"},{"type":"link","label":"no-array-constructor","href":"/typescript-eslint-chinese/rules/no-array-constructor","docId":"no-array-constructor"},{"type":"link","label":"no-base-to-string","href":"/typescript-eslint-chinese/rules/no-base-to-string","docId":"no-base-to-string"},{"type":"link","label":"no-confusing-non-null-assertion","href":"/typescript-eslint-chinese/rules/no-confusing-non-null-assertion","docId":"no-confusing-non-null-assertion"},{"type":"link","label":"no-confusing-void-expression","href":"/typescript-eslint-chinese/rules/no-confusing-void-expression","docId":"no-confusing-void-expression"},{"type":"link","label":"no-dupe-class-members","href":"/typescript-eslint-chinese/rules/no-dupe-class-members","docId":"no-dupe-class-members"},{"type":"link","label":"no-duplicate-enum-values","href":"/typescript-eslint-chinese/rules/no-duplicate-enum-values","docId":"no-duplicate-enum-values"},{"type":"link","label":"no-duplicate-imports","href":"/typescript-eslint-chinese/rules/no-duplicate-imports","docId":"no-duplicate-imports"},{"type":"link","label":"no-dynamic-delete","href":"/typescript-eslint-chinese/rules/no-dynamic-delete","docId":"no-dynamic-delete"},{"type":"link","label":"no-empty-function","href":"/typescript-eslint-chinese/rules/no-empty-function","docId":"no-empty-function"},{"type":"link","label":"no-empty-interface","href":"/typescript-eslint-chinese/rules/no-empty-interface","docId":"no-empty-interface"},{"type":"link","label":"no-explicit-any","href":"/typescript-eslint-chinese/rules/no-explicit-any","docId":"no-explicit-any"},{"type":"link","label":"no-extra-non-null-assertion","href":"/typescript-eslint-chinese/rules/no-extra-non-null-assertion","docId":"no-extra-non-null-assertion"},{"type":"link","label":"no-extra-parens","href":"/typescript-eslint-chinese/rules/no-extra-parens","docId":"no-extra-parens"},{"type":"link","label":"no-extra-semi","href":"/typescript-eslint-chinese/rules/no-extra-semi","docId":"no-extra-semi"},{"type":"link","label":"no-extraneous-class","href":"/typescript-eslint-chinese/rules/no-extraneous-class","docId":"no-extraneous-class"},{"type":"link","label":"no-floating-promises","href":"/typescript-eslint-chinese/rules/no-floating-promises","docId":"no-floating-promises"},{"type":"link","label":"no-for-in-array","href":"/typescript-eslint-chinese/rules/no-for-in-array","docId":"no-for-in-array"},{"type":"link","label":"no-implicit-any-catch","href":"/typescript-eslint-chinese/rules/no-implicit-any-catch","docId":"no-implicit-any-catch"},{"type":"link","label":"no-implied-eval","href":"/typescript-eslint-chinese/rules/no-implied-eval","docId":"no-implied-eval"},{"type":"link","label":"no-inferrable-types","href":"/typescript-eslint-chinese/rules/no-inferrable-types","docId":"no-inferrable-types"},{"type":"link","label":"no-invalid-this","href":"/typescript-eslint-chinese/rules/no-invalid-this","docId":"no-invalid-this"},{"type":"link","label":"no-invalid-void-type","href":"/typescript-eslint-chinese/rules/no-invalid-void-type","docId":"no-invalid-void-type"},{"type":"link","label":"no-loop-func","href":"/typescript-eslint-chinese/rules/no-loop-func","docId":"no-loop-func"},{"type":"link","label":"no-loss-of-precision","href":"/typescript-eslint-chinese/rules/no-loss-of-precision","docId":"no-loss-of-precision"},{"type":"link","label":"no-magic-numbers","href":"/typescript-eslint-chinese/rules/no-magic-numbers","docId":"no-magic-numbers"},{"type":"link","label":"no-meaningless-void-operator","href":"/typescript-eslint-chinese/rules/no-meaningless-void-operator","docId":"no-meaningless-void-operator"},{"type":"link","label":"no-misused-new","href":"/typescript-eslint-chinese/rules/no-misused-new","docId":"no-misused-new"},{"type":"link","label":"no-misused-promises","href":"/typescript-eslint-chinese/rules/no-misused-promises","docId":"no-misused-promises"},{"type":"link","label":"no-namespace","href":"/typescript-eslint-chinese/rules/no-namespace","docId":"no-namespace"},{"type":"link","label":"no-non-null-asserted-nullish-coalescing","href":"/typescript-eslint-chinese/rules/no-non-null-asserted-nullish-coalescing","docId":"no-non-null-asserted-nullish-coalescing"},{"type":"link","label":"no-non-null-asserted-optional-chain","href":"/typescript-eslint-chinese/rules/no-non-null-asserted-optional-chain","docId":"no-non-null-asserted-optional-chain"},{"type":"link","label":"no-non-null-assertion","href":"/typescript-eslint-chinese/rules/no-non-null-assertion","docId":"no-non-null-assertion"},{"type":"link","label":"no-parameter-properties","href":"/typescript-eslint-chinese/rules/no-parameter-properties","docId":"no-parameter-properties"},{"type":"link","label":"no-redeclare","href":"/typescript-eslint-chinese/rules/no-redeclare","docId":"no-redeclare"},{"type":"link","label":"no-redundant-type-constituents","href":"/typescript-eslint-chinese/rules/no-redundant-type-constituents","docId":"no-redundant-type-constituents"},{"type":"link","label":"no-require-imports","href":"/typescript-eslint-chinese/rules/no-require-imports","docId":"no-require-imports"},{"type":"link","label":"no-restricted-imports","href":"/typescript-eslint-chinese/rules/no-restricted-imports","docId":"no-restricted-imports"},{"type":"link","label":"no-shadow","href":"/typescript-eslint-chinese/rules/no-shadow","docId":"no-shadow"},{"type":"link","label":"no-this-alias","href":"/typescript-eslint-chinese/rules/no-this-alias","docId":"no-this-alias"},{"type":"link","label":"no-throw-literal","href":"/typescript-eslint-chinese/rules/no-throw-literal","docId":"no-throw-literal"},{"type":"link","label":"no-type-alias","href":"/typescript-eslint-chinese/rules/no-type-alias","docId":"no-type-alias"},{"type":"link","label":"no-unnecessary-boolean-literal-compare","href":"/typescript-eslint-chinese/rules/no-unnecessary-boolean-literal-compare","docId":"no-unnecessary-boolean-literal-compare"},{"type":"link","label":"no-unnecessary-condition","href":"/typescript-eslint-chinese/rules/no-unnecessary-condition","docId":"no-unnecessary-condition"},{"type":"link","label":"no-unnecessary-qualifier","href":"/typescript-eslint-chinese/rules/no-unnecessary-qualifier","docId":"no-unnecessary-qualifier"},{"type":"link","label":"no-unnecessary-type-arguments","href":"/typescript-eslint-chinese/rules/no-unnecessary-type-arguments","docId":"no-unnecessary-type-arguments"},{"type":"link","label":"no-unnecessary-type-assertion","href":"/typescript-eslint-chinese/rules/no-unnecessary-type-assertion","docId":"no-unnecessary-type-assertion"},{"type":"link","label":"no-unnecessary-type-constraint","href":"/typescript-eslint-chinese/rules/no-unnecessary-type-constraint","docId":"no-unnecessary-type-constraint"},{"type":"link","label":"no-unsafe-argument","href":"/typescript-eslint-chinese/rules/no-unsafe-argument","docId":"no-unsafe-argument"},{"type":"link","label":"no-unsafe-assignment","href":"/typescript-eslint-chinese/rules/no-unsafe-assignment","docId":"no-unsafe-assignment"},{"type":"link","label":"no-unsafe-call","href":"/typescript-eslint-chinese/rules/no-unsafe-call","docId":"no-unsafe-call"},{"type":"link","label":"no-unsafe-member-access","href":"/typescript-eslint-chinese/rules/no-unsafe-member-access","docId":"no-unsafe-member-access"},{"type":"link","label":"no-unsafe-return","href":"/typescript-eslint-chinese/rules/no-unsafe-return","docId":"no-unsafe-return"},{"type":"link","label":"no-unused-expressions","href":"/typescript-eslint-chinese/rules/no-unused-expressions","docId":"no-unused-expressions"},{"type":"link","label":"no-unused-vars","href":"/typescript-eslint-chinese/rules/no-unused-vars","docId":"no-unused-vars"},{"type":"link","label":"no-use-before-define","href":"/typescript-eslint-chinese/rules/no-use-before-define","docId":"no-use-before-define"},{"type":"link","label":"no-useless-constructor","href":"/typescript-eslint-chinese/rules/no-useless-constructor","docId":"no-useless-constructor"},{"type":"link","label":"no-useless-empty-export","href":"/typescript-eslint-chinese/rules/no-useless-empty-export","docId":"no-useless-empty-export"},{"type":"link","label":"no-var-requires","href":"/typescript-eslint-chinese/rules/no-var-requires","docId":"no-var-requires"},{"type":"link","label":"non-nullable-type-assertion-style","href":"/typescript-eslint-chinese/rules/non-nullable-type-assertion-style","docId":"non-nullable-type-assertion-style"},{"type":"link","label":"object-curly-spacing","href":"/typescript-eslint-chinese/rules/object-curly-spacing","docId":"object-curly-spacing"},{"type":"link","label":"padding-line-between-statements","href":"/typescript-eslint-chinese/rules/padding-line-between-statements","docId":"padding-line-between-statements"},{"type":"link","label":"parameter-properties","href":"/typescript-eslint-chinese/rules/parameter-properties","docId":"parameter-properties"},{"type":"link","label":"prefer-as-const","href":"/typescript-eslint-chinese/rules/prefer-as-const","docId":"prefer-as-const"},{"type":"link","label":"prefer-enum-initializers","href":"/typescript-eslint-chinese/rules/prefer-enum-initializers","docId":"prefer-enum-initializers"},{"type":"link","label":"prefer-for-of","href":"/typescript-eslint-chinese/rules/prefer-for-of","docId":"prefer-for-of"},{"type":"link","label":"prefer-function-type","href":"/typescript-eslint-chinese/rules/prefer-function-type","docId":"prefer-function-type"},{"type":"link","label":"prefer-includes","href":"/typescript-eslint-chinese/rules/prefer-includes","docId":"prefer-includes"},{"type":"link","label":"prefer-literal-enum-member","href":"/typescript-eslint-chinese/rules/prefer-literal-enum-member","docId":"prefer-literal-enum-member"},{"type":"link","label":"prefer-namespace-keyword","href":"/typescript-eslint-chinese/rules/prefer-namespace-keyword","docId":"prefer-namespace-keyword"},{"type":"link","label":"prefer-nullish-coalescing","href":"/typescript-eslint-chinese/rules/prefer-nullish-coalescing","docId":"prefer-nullish-coalescing"},{"type":"link","label":"prefer-optional-chain","href":"/typescript-eslint-chinese/rules/prefer-optional-chain","docId":"prefer-optional-chain"},{"type":"link","label":"prefer-readonly-parameter-types","href":"/typescript-eslint-chinese/rules/prefer-readonly-parameter-types","docId":"prefer-readonly-parameter-types"},{"type":"link","label":"prefer-readonly","href":"/typescript-eslint-chinese/rules/prefer-readonly","docId":"prefer-readonly"},{"type":"link","label":"prefer-reduce-type-parameter","href":"/typescript-eslint-chinese/rules/prefer-reduce-type-parameter","docId":"prefer-reduce-type-parameter"},{"type":"link","label":"prefer-regexp-exec","href":"/typescript-eslint-chinese/rules/prefer-regexp-exec","docId":"prefer-regexp-exec"},{"type":"link","label":"prefer-return-this-type","href":"/typescript-eslint-chinese/rules/prefer-return-this-type","docId":"prefer-return-this-type"},{"type":"link","label":"prefer-string-starts-ends-with","href":"/typescript-eslint-chinese/rules/prefer-string-starts-ends-with","docId":"prefer-string-starts-ends-with"},{"type":"link","label":"prefer-ts-expect-error","href":"/typescript-eslint-chinese/rules/prefer-ts-expect-error","docId":"prefer-ts-expect-error"},{"type":"link","label":"promise-function-async","href":"/typescript-eslint-chinese/rules/promise-function-async","docId":"promise-function-async"},{"type":"link","label":"quotes","href":"/typescript-eslint-chinese/rules/quotes","docId":"quotes"},{"type":"link","label":"require-array-sort-compare","href":"/typescript-eslint-chinese/rules/require-array-sort-compare","docId":"require-array-sort-compare"},{"type":"link","label":"require-await","href":"/typescript-eslint-chinese/rules/require-await","docId":"require-await"},{"type":"link","label":"restrict-plus-operands","href":"/typescript-eslint-chinese/rules/restrict-plus-operands","docId":"restrict-plus-operands"},{"type":"link","label":"restrict-template-expressions","href":"/typescript-eslint-chinese/rules/restrict-template-expressions","docId":"restrict-template-expressions"},{"type":"link","label":"return-await","href":"/typescript-eslint-chinese/rules/return-await","docId":"return-await"},{"type":"link","label":"semi","href":"/typescript-eslint-chinese/rules/semi","docId":"semi"},{"type":"link","label":"sort-type-union-intersection-members","href":"/typescript-eslint-chinese/rules/sort-type-union-intersection-members","docId":"sort-type-union-intersection-members"},{"type":"link","label":"space-before-blocks","href":"/typescript-eslint-chinese/rules/space-before-blocks","docId":"space-before-blocks"},{"type":"link","label":"space-before-function-paren","href":"/typescript-eslint-chinese/rules/space-before-function-paren","docId":"space-before-function-paren"},{"type":"link","label":"space-infix-ops","href":"/typescript-eslint-chinese/rules/space-infix-ops","docId":"space-infix-ops"},{"type":"link","label":"strict-boolean-expressions","href":"/typescript-eslint-chinese/rules/strict-boolean-expressions","docId":"strict-boolean-expressions"},{"type":"link","label":"switch-exhaustiveness-check","href":"/typescript-eslint-chinese/rules/switch-exhaustiveness-check","docId":"switch-exhaustiveness-check"},{"type":"link","label":"triple-slash-reference","href":"/typescript-eslint-chinese/rules/triple-slash-reference","docId":"triple-slash-reference"},{"type":"link","label":"type-annotation-spacing","href":"/typescript-eslint-chinese/rules/type-annotation-spacing","docId":"type-annotation-spacing"},{"type":"link","label":"typedef","href":"/typescript-eslint-chinese/rules/typedef","docId":"typedef"},{"type":"link","label":"unbound-method","href":"/typescript-eslint-chinese/rules/unbound-method","docId":"unbound-method"},{"type":"link","label":"unified-signatures","href":"/typescript-eslint-chinese/rules/unified-signatures","docId":"unified-signatures"}]},"docs":{"adjacent-overload-signatures":{"id":"adjacent-overload-signatures","title":"adjacent-overload-signatures","description":"\u89c4\u5b9a\u6210\u5458\u91cd\u8f7d\u662f\u8fde\u7eed\u7684\u3002","sidebar":"rules"},"array-type":{"id":"array-type","title":"array-type","description":"\u89c4\u5b9a\u6570\u7ec4\u4f7f\u7528 T[] \u6216\u8005 Array\u3002","sidebar":"rules"},"await-thenable":{"id":"await-thenable","title":"await-thenable","description":"\u4e0d\u5141\u8bb8\u7b49\u5f85\u975e Thenable \u7684\u503c\u3002","sidebar":"rules"},"ban-ts-comment":{"id":"ban-ts-comment","title":"ban-ts-comment","description":"Disallows @ts- comments or requires descriptions after directive.","sidebar":"rules"},"ban-tslint-comment":{"id":"ban-tslint-comment","title":"ban-tslint-comment","description":"Disallows // tslint: comments.","sidebar":"rules"},"ban-types":{"id":"ban-types","title":"ban-types","description":"Disallows certain types.","sidebar":"rules"},"brace-style":{"id":"brace-style","title":"brace-style","description":"Enforces consistent brace style for blocks.","sidebar":"rules"},"camelcase":{"id":"camelcase","title":"camelcase","description":"DEPRECATED","sidebar":"rules"},"class-literal-property-style":{"id":"class-literal-property-style","title":"class-literal-property-style","description":"Enforces that literals on classes are exposed in a consistent style.","sidebar":"rules"},"comma-dangle":{"id":"comma-dangle","title":"comma-dangle","description":"Requires or disallows trailing commas.","sidebar":"rules"},"comma-spacing":{"id":"comma-spacing","title":"comma-spacing","description":"Enforces consistent spacing before and after commas.","sidebar":"rules"},"consistent-generic-constructors":{"id":"consistent-generic-constructors","title":"consistent-generic-constructors","description":"Enforces specifying generic type arguments on type annotation or constructor name of a constructor call.","sidebar":"rules"},"consistent-indexed-object-style":{"id":"consistent-indexed-object-style","title":"consistent-indexed-object-style","description":"Requires or disallows the Record type.","sidebar":"rules"},"consistent-type-assertions":{"id":"consistent-type-assertions","title":"consistent-type-assertions","description":"Enforces consistent usage of type assertions.","sidebar":"rules"},"consistent-type-definitions":{"id":"consistent-type-definitions","title":"consistent-type-definitions","description":"Enforces type definitions to consistently use either interface or type.","sidebar":"rules"},"consistent-type-exports":{"id":"consistent-type-exports","title":"consistent-type-exports","description":"Enforces consistent usage of type exports.","sidebar":"rules"},"consistent-type-imports":{"id":"consistent-type-imports","title":"consistent-type-imports","description":"Enforces consistent usage of type imports.","sidebar":"rules"},"default-param-last":{"id":"default-param-last","title":"default-param-last","description":"Enforces default parameters to be last.","sidebar":"rules"},"dot-notation":{"id":"dot-notation","title":"dot-notation","description":"Enforces dot notation whenever possible.","sidebar":"rules"},"explicit-function-return-type":{"id":"explicit-function-return-type","title":"explicit-function-return-type","description":"Requires explicit return types on functions and class methods.","sidebar":"rules"},"explicit-member-accessibility":{"id":"explicit-member-accessibility","title":"explicit-member-accessibility","description":"Requires explicit accessibility modifiers on class properties and methods.","sidebar":"rules"},"explicit-module-boundary-types":{"id":"explicit-module-boundary-types","title":"explicit-module-boundary-types","description":"Requires explicit return and argument types on exported functions\' and classes\' public class methods.","sidebar":"rules"},"func-call-spacing":{"id":"func-call-spacing","title":"func-call-spacing","description":"Requires or disallows spacing between function identifiers and their invocations.","sidebar":"rules"},"indent":{"id":"indent","title":"indent","description":"Enforces consistent indentation.","sidebar":"rules"},"init-declarations":{"id":"init-declarations","title":"init-declarations","description":"Requires or disallows initialization in variable declarations.","sidebar":"rules"},"keyword-spacing":{"id":"keyword-spacing","title":"keyword-spacing","description":"Enforces consistent spacing before and after keywords.","sidebar":"rules"},"lines-between-class-members":{"id":"lines-between-class-members","title":"lines-between-class-members","description":"Requires or disallows an empty line between class members.","sidebar":"rules"},"member-delimiter-style":{"id":"member-delimiter-style","title":"member-delimiter-style","description":"Requires a specific member delimiter style for interfaces and type literals.","sidebar":"rules"},"member-ordering":{"id":"member-ordering","title":"member-ordering","description":"Requires a consistent member declaration order.","sidebar":"rules"},"method-signature-style":{"id":"method-signature-style","title":"method-signature-style","description":"Enforces using a particular method signature syntax.","sidebar":"rules"},"naming-convention":{"id":"naming-convention","title":"naming-convention","description":"Enforces naming conventions for everything across a codebase.","sidebar":"rules"},"no-array-constructor":{"id":"no-array-constructor","title":"no-array-constructor","description":"Disallows generic Array constructors.","sidebar":"rules"},"no-base-to-string":{"id":"no-base-to-string","title":"no-base-to-string","description":"Requires .toString() to only be called on objects which provide useful information when stringified.","sidebar":"rules"},"no-confusing-non-null-assertion":{"id":"no-confusing-non-null-assertion","title":"no-confusing-non-null-assertion","description":"Disallows non-null assertion in locations that may be confusing.","sidebar":"rules"},"no-confusing-void-expression":{"id":"no-confusing-void-expression","title":"no-confusing-void-expression","description":"Requires expressions of type void to appear in statement position.","sidebar":"rules"},"no-dupe-class-members":{"id":"no-dupe-class-members","title":"no-dupe-class-members","description":"Disallows duplicate class members.","sidebar":"rules"},"no-duplicate-enum-values":{"id":"no-duplicate-enum-values","title":"no-duplicate-enum-values","description":"Disallows duplicate enum member values.","sidebar":"rules"},"no-duplicate-imports":{"id":"no-duplicate-imports","title":"no-duplicate-imports","description":"Disallows duplicate imports.","sidebar":"rules"},"no-dynamic-delete":{"id":"no-dynamic-delete","title":"no-dynamic-delete","description":"Disallows using the delete operator on computed key expressions.","sidebar":"rules"},"no-empty-function":{"id":"no-empty-function","title":"no-empty-function","description":"Disallows empty functions.","sidebar":"rules"},"no-empty-interface":{"id":"no-empty-interface","title":"no-empty-interface","description":"Disallows the declaration of empty interfaces.","sidebar":"rules"},"no-explicit-any":{"id":"no-explicit-any","title":"no-explicit-any","description":"Disallows the any type.","sidebar":"rules"},"no-extra-non-null-assertion":{"id":"no-extra-non-null-assertion","title":"no-extra-non-null-assertion","description":"Disallows extra non-null assertion.","sidebar":"rules"},"no-extra-parens":{"id":"no-extra-parens","title":"no-extra-parens","description":"Disallows unnecessary parentheses.","sidebar":"rules"},"no-extra-semi":{"id":"no-extra-semi","title":"no-extra-semi","description":"Disallows unnecessary semicolons.","sidebar":"rules"},"no-extraneous-class":{"id":"no-extraneous-class","title":"no-extraneous-class","description":"Disallows classes used as namespaces.","sidebar":"rules"},"no-floating-promises":{"id":"no-floating-promises","title":"no-floating-promises","description":"Requires Promise-like statements to be handled appropriately.","sidebar":"rules"},"no-for-in-array":{"id":"no-for-in-array","title":"no-for-in-array","description":"Disallows iterating over an array with a for-in loop.","sidebar":"rules"},"no-implicit-any-catch":{"id":"no-implicit-any-catch","title":"no-implicit-any-catch","description":"Disallows usage of the implicit any type in catch clauses.","sidebar":"rules"},"no-implied-eval":{"id":"no-implied-eval","title":"no-implied-eval","description":"Disallows the use of eval()-like methods.","sidebar":"rules"},"no-inferrable-types":{"id":"no-inferrable-types","title":"no-inferrable-types","description":"Disallows explicit type declarations for variables or parameters initialized to a number, string, or boolean.","sidebar":"rules"},"no-invalid-this":{"id":"no-invalid-this","title":"no-invalid-this","description":"Disallows this keywords outside of classes or class-like objects.","sidebar":"rules"},"no-invalid-void-type":{"id":"no-invalid-void-type","title":"no-invalid-void-type","description":"Disallows void type outside of generic or return types.","sidebar":"rules"},"no-loop-func":{"id":"no-loop-func","title":"no-loop-func","description":"Disallows function declarations that contain unsafe references inside loop statements.","sidebar":"rules"},"no-loss-of-precision":{"id":"no-loss-of-precision","title":"no-loss-of-precision","description":"Disallows literal numbers that lose precision.","sidebar":"rules"},"no-magic-numbers":{"id":"no-magic-numbers","title":"no-magic-numbers","description":"Disallows magic numbers.","sidebar":"rules"},"no-meaningless-void-operator":{"id":"no-meaningless-void-operator","title":"no-meaningless-void-operator","description":"Disallows the void operator except when used to discard a value.","sidebar":"rules"},"no-misused-new":{"id":"no-misused-new","title":"no-misused-new","description":"Enforces valid definition of new and constructor.","sidebar":"rules"},"no-misused-promises":{"id":"no-misused-promises","title":"no-misused-promises","description":"Disallows Promises in places not designed to handle them.","sidebar":"rules"},"no-namespace":{"id":"no-namespace","title":"no-namespace","description":"Disallows custom TypeScript modules and namespaces.","sidebar":"rules"},"no-non-null-asserted-nullish-coalescing":{"id":"no-non-null-asserted-nullish-coalescing","title":"no-non-null-asserted-nullish-coalescing","description":"Disallows non-null assertions in the left operand of a nullish coalescing operator.","sidebar":"rules"},"no-non-null-asserted-optional-chain":{"id":"no-non-null-asserted-optional-chain","title":"no-non-null-asserted-optional-chain","description":"Disallows non-null assertions after an optional chain expression.","sidebar":"rules"},"no-non-null-assertion":{"id":"no-non-null-assertion","title":"no-non-null-assertion","description":"Disallows non-null assertions using the ! postfix operator.","sidebar":"rules"},"no-parameter-properties":{"id":"no-parameter-properties","title":"no-parameter-properties","description":"Disallows the use of parameter properties in class constructors.","sidebar":"rules"},"no-redeclare":{"id":"no-redeclare","title":"no-redeclare","description":"Disallows variable redeclaration.","sidebar":"rules"},"no-redundant-type-constituents":{"id":"no-redundant-type-constituents","title":"no-redundant-type-constituents","description":"Disallows members of unions and intersections that do nothing or override type information.","sidebar":"rules"},"no-require-imports":{"id":"no-require-imports","title":"no-require-imports","description":"Disallows invocation of require().","sidebar":"rules"},"no-restricted-imports":{"id":"no-restricted-imports","title":"no-restricted-imports","description":"Disallows specified modules when loaded by import.","sidebar":"rules"},"no-shadow":{"id":"no-shadow","title":"no-shadow","description":"Disallows variable declarations from shadowing variables declared in the outer scope.","sidebar":"rules"},"no-this-alias":{"id":"no-this-alias","title":"no-this-alias","description":"Disallows aliasing this.","sidebar":"rules"},"no-throw-literal":{"id":"no-throw-literal","title":"no-throw-literal","description":"Disallows throwing literals as exceptions.","sidebar":"rules"},"no-type-alias":{"id":"no-type-alias","title":"no-type-alias","description":"Disallows type aliases.","sidebar":"rules"},"no-unnecessary-boolean-literal-compare":{"id":"no-unnecessary-boolean-literal-compare","title":"no-unnecessary-boolean-literal-compare","description":"Disallows unnecessary equality comparisons against boolean literals.","sidebar":"rules"},"no-unnecessary-condition":{"id":"no-unnecessary-condition","title":"no-unnecessary-condition","description":"Disallows conditionals where the type is always truthy or always falsy.","sidebar":"rules"},"no-unnecessary-qualifier":{"id":"no-unnecessary-qualifier","title":"no-unnecessary-qualifier","description":"Disallows unnecessary namespace qualifiers.","sidebar":"rules"},"no-unnecessary-type-arguments":{"id":"no-unnecessary-type-arguments","title":"no-unnecessary-type-arguments","description":"Disallows type arguments that are equal to the default.","sidebar":"rules"},"no-unnecessary-type-assertion":{"id":"no-unnecessary-type-assertion","title":"no-unnecessary-type-assertion","description":"Disallows type assertions that do not change the type of an expression.","sidebar":"rules"},"no-unnecessary-type-constraint":{"id":"no-unnecessary-type-constraint","title":"no-unnecessary-type-constraint","description":"Disallows unnecessary constraints on generic types.","sidebar":"rules"},"no-unsafe-argument":{"id":"no-unsafe-argument","title":"no-unsafe-argument","description":"Disallows calling a function with a value with type any.","sidebar":"rules"},"no-unsafe-assignment":{"id":"no-unsafe-assignment","title":"no-unsafe-assignment","description":"Disallows assigning a value with type any to variables and properties.","sidebar":"rules"},"no-unsafe-call":{"id":"no-unsafe-call","title":"no-unsafe-call","description":"Disallows calling a value with type any.","sidebar":"rules"},"no-unsafe-member-access":{"id":"no-unsafe-member-access","title":"no-unsafe-member-access","description":"Disallows member access on a value with type any.","sidebar":"rules"},"no-unsafe-return":{"id":"no-unsafe-return","title":"no-unsafe-return","description":"Disallows returning a value with type any from a function.","sidebar":"rules"},"no-unused-expressions":{"id":"no-unused-expressions","title":"no-unused-expressions","description":"Disallows unused expressions.","sidebar":"rules"},"no-unused-vars":{"id":"no-unused-vars","title":"no-unused-vars","description":"Disallows unused variables.","sidebar":"rules"},"no-use-before-define":{"id":"no-use-before-define","title":"no-use-before-define","description":"Disallows the use of variables before they are defined.","sidebar":"rules"},"no-useless-constructor":{"id":"no-useless-constructor","title":"no-useless-constructor","description":"Disallows unnecessary constructors.","sidebar":"rules"},"no-useless-empty-export":{"id":"no-useless-empty-export","title":"no-useless-empty-export","description":"Disallows empty exports that don\'t change anything in a module file.","sidebar":"rules"},"no-var-requires":{"id":"no-var-requires","title":"no-var-requires","description":"Disallows require statements except in import statements.","sidebar":"rules"},"non-nullable-type-assertion-style":{"id":"non-nullable-type-assertion-style","title":"non-nullable-type-assertion-style","description":"Enforces non-null assertions over explicit type casts.","sidebar":"rules"},"object-curly-spacing":{"id":"object-curly-spacing","title":"object-curly-spacing","description":"Enforces consistent spacing inside braces.","sidebar":"rules"},"padding-line-between-statements":{"id":"padding-line-between-statements","title":"padding-line-between-statements","description":"Requires or disallows padding lines between statements.","sidebar":"rules"},"parameter-properties":{"id":"parameter-properties","title":"parameter-properties","description":"Requires or disallows parameter properties in class constructors.","sidebar":"rules"},"prefer-as-const":{"id":"prefer-as-const","title":"prefer-as-const","description":"Enforces the use of as const over literal type.","sidebar":"rules"},"prefer-enum-initializers":{"id":"prefer-enum-initializers","title":"prefer-enum-initializers","description":"Requires each enum member value to be explicitly initialized.","sidebar":"rules"},"prefer-for-of":{"id":"prefer-for-of","title":"prefer-for-of","description":"Enforces the use of for-of loop over the standard for loop where possible.","sidebar":"rules"},"prefer-function-type":{"id":"prefer-function-type","title":"prefer-function-type","description":"Enforces using function types instead of interfaces with call signatures.","sidebar":"rules"},"prefer-includes":{"id":"prefer-includes","title":"prefer-includes","description":"Enforces includes method over indexOf method.","sidebar":"rules"},"prefer-literal-enum-member":{"id":"prefer-literal-enum-member","title":"prefer-literal-enum-member","description":"Requires all enum members to be literal values.","sidebar":"rules"},"prefer-namespace-keyword":{"id":"prefer-namespace-keyword","title":"prefer-namespace-keyword","description":"Requires using namespace keyword over module keyword to declare custom TypeScript modules.","sidebar":"rules"},"prefer-nullish-coalescing":{"id":"prefer-nullish-coalescing","title":"prefer-nullish-coalescing","description":"Enforces using the nullish coalescing operator instead of logical chaining.","sidebar":"rules"},"prefer-optional-chain":{"id":"prefer-optional-chain","title":"prefer-optional-chain","description":"Enforces using concise optional chain expressions instead of chained logical ands.","sidebar":"rules"},"prefer-readonly":{"id":"prefer-readonly","title":"prefer-readonly","description":"Requires private members to be marked as readonly if they\'re never modified outside of the constructor.","sidebar":"rules"},"prefer-readonly-parameter-types":{"id":"prefer-readonly-parameter-types","title":"prefer-readonly-parameter-types","description":"Requires function parameters to be typed as readonly to prevent accidental mutation of inputs.","sidebar":"rules"},"prefer-reduce-type-parameter":{"id":"prefer-reduce-type-parameter","title":"prefer-reduce-type-parameter","description":"Enforces using type parameter when calling Array#reduce instead of casting.","sidebar":"rules"},"prefer-regexp-exec":{"id":"prefer-regexp-exec","title":"prefer-regexp-exec","description":"Enforces RegExp#exec over String#match if no global flag is provided.","sidebar":"rules"},"prefer-return-this-type":{"id":"prefer-return-this-type","title":"prefer-return-this-type","description":"Enforces that this is used when only this type is returned.","sidebar":"rules"},"prefer-string-starts-ends-with":{"id":"prefer-string-starts-ends-with","title":"prefer-string-starts-ends-with","description":"Enforces using String#startsWith and String#endsWith over other equivalent methods of checking substrings.","sidebar":"rules"},"prefer-ts-expect-error":{"id":"prefer-ts-expect-error","title":"prefer-ts-expect-error","description":"Enforces using @ts-expect-error over @ts-ignore.","sidebar":"rules"},"promise-function-async":{"id":"promise-function-async","title":"promise-function-async","description":"Requires any function or method that returns a Promise to be marked async.","sidebar":"rules"},"quotes":{"id":"quotes","title":"quotes","description":"Enforces the consistent use of either backticks, double, or single quotes.","sidebar":"rules"},"README":{"id":"README","title":"Overview","description":"@typescript-eslint/eslint-plugin \u5305\u542b\u8d85\u8fc7\u4e86 100 \u6761\u89c4\u5219\uff0c\u4e13\u95e8\u7528\u4e8e\u68c0\u6d4b TypeScript \u4ee3\u7801\u4e2d\u8fdd\u53cd\u6700\u4f73\u5b9e\u8df5\u3001bug\u3001\u548c\u98ce\u683c\u95ee\u9898\u3002","sidebar":"rules"},"require-array-sort-compare":{"id":"require-array-sort-compare","title":"require-array-sort-compare","description":"Requires Array#sort calls to always provide a compareFunction.","sidebar":"rules"},"require-await":{"id":"require-await","title":"require-await","description":"Disallows async functions which have no await expression.","sidebar":"rules"},"restrict-plus-operands":{"id":"restrict-plus-operands","title":"restrict-plus-operands","description":"Requires both operands of addition to have type number or string.","sidebar":"rules"},"restrict-template-expressions":{"id":"restrict-template-expressions","title":"restrict-template-expressions","description":"Enforces template literal expressions to be of string type.","sidebar":"rules"},"return-await":{"id":"return-await","title":"return-await","description":"Enforces consistent returning of awaited values.","sidebar":"rules"},"semi":{"id":"semi","title":"semi","description":"Requires or disallows semicolons instead of ASI.","sidebar":"rules"},"sort-type-union-intersection-members":{"id":"sort-type-union-intersection-members","title":"sort-type-union-intersection-members","description":"Enforces members of a type union/intersection to be sorted alphabetically.","sidebar":"rules"},"space-before-blocks":{"id":"space-before-blocks","title":"space-before-blocks","description":"Enforces consistent spacing before blocks.","sidebar":"rules"},"space-before-function-paren":{"id":"space-before-function-paren","title":"space-before-function-paren","description":"Enforces consistent spacing before function parenthesis.","sidebar":"rules"},"space-infix-ops":{"id":"space-infix-ops","title":"space-infix-ops","description":"Requires spacing around infix operators.","sidebar":"rules"},"strict-boolean-expressions":{"id":"strict-boolean-expressions","title":"strict-boolean-expressions","description":"Disallows certain types in boolean expressions.","sidebar":"rules"},"switch-exhaustiveness-check":{"id":"switch-exhaustiveness-check","title":"switch-exhaustiveness-check","description":"Requires switch-case statements to be exhaustive with union type.","sidebar":"rules"},"triple-slash-reference":{"id":"triple-slash-reference","title":"triple-slash-reference","description":"Disallows certain triple slash directives in favor of ES6-style import declarations.","sidebar":"rules"},"type-annotation-spacing":{"id":"type-annotation-spacing","title":"type-annotation-spacing","description":"Requires consistent spacing around type annotations.","sidebar":"rules"},"typedef":{"id":"typedef","title":"typedef","description":"Requires type annotations in certain places.","sidebar":"rules"},"unbound-method":{"id":"unbound-method","title":"unbound-method","description":"Enforces unbound methods are called with their expected scope.","sidebar":"rules"},"unified-signatures":{"id":"unified-signatures","title":"unified-signatures","description":"Disallows two overloads that could be unified into one with a union or an optional/rest parameter.","sidebar":"rules"}}}')}}]);