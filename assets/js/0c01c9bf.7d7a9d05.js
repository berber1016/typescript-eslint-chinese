"use strict";(self.webpackChunktypescript_eslint_chinese=self.webpackChunktypescript_eslint_chinese||[]).push([[6377],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return f}});var r=n(7294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function u(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var i=r.createContext({}),l=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):u(u({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(i.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,o=e.originalType,i=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),d=l(n),f=s,m=d["".concat(i,".").concat(f)]||d[f]||c[f]||o;return n?r.createElement(m,u(u({ref:t},p),{},{components:n})):r.createElement(m,u({ref:t},p))}));function f(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var o=n.length,u=new Array(o);u[0]=d;var a={};for(var i in t)hasOwnProperty.call(t,i)&&(a[i]=t[i]);a.originalType=e,a.mdxType="string"==typeof e?e:s,u[1]=a;for(var l=2;l<o;l++)u[l]=n[l];return r.createElement.apply(null,u)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9431:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return i},default:function(){return f},frontMatter:function(){return a},metadata:function(){return l},toc:function(){return c}});var r=n(3117),s=n(102),o=(n(7294),n(3905)),u=["components"],a={},i="no-unused-vars",l={unversionedId:"no-unused-vars",id:"no-unused-vars",title:"no-unused-vars",description:"Disallows unused variables.",source:"@site/rules/no-unused-vars.md",sourceDirName:".",slug:"/no-unused-vars",permalink:"/typescript-eslint-chinese/rules/no-unused-vars",draft:!1,tags:[],version:"current",lastUpdatedBy:"GEARLESS JOE",lastUpdatedAt:1657186506,formattedLastUpdatedAt:"2022\u5e747\u67087\u65e5",frontMatter:{},sidebar:"rules",previous:{title:"no-unused-expressions",permalink:"/typescript-eslint-chinese/rules/no-unused-expressions"},next:{title:"no-use-before-define",permalink:"/typescript-eslint-chinese/rules/no-use-before-define"}},p={},c=[{value:"Rule Details",id:"rule-details",level:2},{value:"How to Use",id:"how-to-use",level:2},{value:"Options",id:"options",level:2}],d={toc:c};function f(e){var t=e.components,n=(0,s.Z)(e,u);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"no-unused-vars"},(0,o.kt)("inlineCode",{parentName:"h1"},"no-unused-vars")),(0,o.kt)("p",null,"Disallows unused variables."),(0,o.kt)("h2",{id:"rule-details"},"Rule Details"),(0,o.kt)("p",null,"This rule extends the base ",(0,o.kt)("a",{parentName:"p",href:"https://eslint.org/docs/rules/no-unused-vars"},(0,o.kt)("inlineCode",{parentName:"a"},"eslint/no-unused-vars"))," rule.\nIt adds support for TypeScript features, such as types."),(0,o.kt)("h2",{id:"how-to-use"},"How to Use"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsonc"},'{\n  // note you must disable the base rule as it can report incorrect errors\n  "no-unused-vars": "off",\n  "@typescript-eslint/no-unused-vars": ["error"]\n}\n')),(0,o.kt)("h2",{id:"options"},"Options"),(0,o.kt)("p",null,"See ",(0,o.kt)("a",{parentName:"p",href:"https://eslint.org/docs/rules/no-unused-vars#options"},(0,o.kt)("inlineCode",{parentName:"a"},"eslint/no-unused-vars")," options"),"."),(0,o.kt)("sup",null,(0,o.kt)("p",null,"Taken with \u2764\ufe0f ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/eslint/eslint/blob/main/docs/rules/no-unused-vars.md"},"from ESLint core"))))}f.isMDXComponent=!0}}]);