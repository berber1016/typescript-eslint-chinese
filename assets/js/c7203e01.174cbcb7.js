"use strict";(self.webpackChunktypescript_eslint_chinese=self.webpackChunktypescript_eslint_chinese||[]).push([[3231],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,l=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),y=c(n),d=o,f=y["".concat(s,".").concat(d)]||y[d]||p[d]||l;return n?r.createElement(f,a(a({ref:t},u),{},{components:n})):r.createElement(f,a({ref:t},u))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=n.length,a=new Array(l);a[0]=y;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var c=2;c<l;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},4684:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return p}});var r=n(3117),o=n(102),l=(n(7294),n(3905)),a=["components"],i={},s="non-nullable-type-assertion-style",c={unversionedId:"non-nullable-type-assertion-style",id:"non-nullable-type-assertion-style",title:"non-nullable-type-assertion-style",description:"Enforces non-null assertions over explicit type casts.",source:"@site/rules/non-nullable-type-assertion-style.md",sourceDirName:".",slug:"/non-nullable-type-assertion-style",permalink:"/typescript-eslint-chinese/rules/non-nullable-type-assertion-style",draft:!1,tags:[],version:"current",lastUpdatedBy:"GEARLESS JOE",lastUpdatedAt:1657247748,formattedLastUpdatedAt:"2022\u5e747\u67088\u65e5",frontMatter:{},sidebar:"rules",previous:{title:"no-var-requires",permalink:"/typescript-eslint-chinese/rules/no-var-requires"},next:{title:"object-curly-spacing",permalink:"/typescript-eslint-chinese/rules/object-curly-spacing"}},u={},p=[{value:"Rule Details",id:"rule-details",level:2},{value:"\u274c Incorrect",id:"-incorrect",level:3},{value:"\u2705 Correct",id:"-correct",level:3},{value:"Options",id:"options",level:2},{value:"When Not To Use It",id:"when-not-to-use-it",level:2}],y={toc:p};function d(e){var t=e.components,n=(0,o.Z)(e,a);return(0,l.kt)("wrapper",(0,r.Z)({},y,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"non-nullable-type-assertion-style"},(0,l.kt)("inlineCode",{parentName:"h1"},"non-nullable-type-assertion-style")),(0,l.kt)("p",null,"Enforces non-null assertions over explicit type casts."),(0,l.kt)("p",null,"This rule detects when an ",(0,l.kt)("inlineCode",{parentName:"p"},"as")," cast is doing the same job as a ",(0,l.kt)("inlineCode",{parentName:"p"},"!")," would, and suggests fixing the code to be an ",(0,l.kt)("inlineCode",{parentName:"p"},"!"),"."),(0,l.kt)("h2",{id:"rule-details"},"Rule Details"),(0,l.kt)("p",null,"Examples of code for this rule:"),(0,l.kt)("h3",{id:"-incorrect"},"\u274c Incorrect"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},'const maybe = Math.random() > 0.5 ? "" : undefined;\n\nconst definitely = maybe as string;\nconst alsoDefinitely = <string>maybe;\n')),(0,l.kt)("h3",{id:"-correct"},"\u2705 Correct"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},'const maybe = Math.random() > 0.5 ? "" : undefined;\n\nconst definitely = maybe!;\nconst alsoDefinitely = maybe!;\n')),(0,l.kt)("h2",{id:"options"},"Options"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsonc"},'// .eslintrc.json\n{\n  "rules": {\n    "@typescript-eslint/non-nullable-type-assertion-style": "warn"\n  }\n}\n')),(0,l.kt)("p",null,"This rule is not configurable."),(0,l.kt)("h2",{id:"when-not-to-use-it"},"When Not To Use It"),(0,l.kt)("p",null,"If you don't mind having unnecessarily verbose type casts, you can avoid this rule."))}d.isMDXComponent=!0}}]);