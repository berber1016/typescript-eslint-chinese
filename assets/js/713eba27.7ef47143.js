"use strict";(self.webpackChunktypescript_eslint_chinese=self.webpackChunktypescript_eslint_chinese||[]).push([[652],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return g}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},s=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),f=l(r),g=o,m=f["".concat(c,".").concat(g)]||f[g]||u[g]||i;return r?n.createElement(m,a(a({ref:t},s),{},{components:r})):n.createElement(m,a({ref:t},s))}));function g(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=f;var p={};for(var c in t)hasOwnProperty.call(t,c)&&(p[c]=t[c]);p.originalType=e,p.mdxType="string"==typeof e?e:o,a[1]=p;for(var l=2;l<i;l++)a[l]=r[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},7455:function(e,t,r){r.r(t),r.d(t,{assets:function(){return s},contentTitle:function(){return c},default:function(){return g},frontMatter:function(){return p},metadata:function(){return l},toc:function(){return u}});var n=r(3117),o=r(102),i=(r(7294),r(3905)),a=["components"],p={},c="prefer-regexp-exec",l={unversionedId:"prefer-regexp-exec",id:"prefer-regexp-exec",title:"prefer-regexp-exec",description:"Enforces RegExp#exec over String#match if no global flag is provided.",source:"@site/rules/prefer-regexp-exec.md",sourceDirName:".",slug:"/prefer-regexp-exec",permalink:"/typescript-eslint-chinese/rules/prefer-regexp-exec",draft:!1,tags:[],version:"current",lastUpdatedBy:"GEARLESS JOE",lastUpdatedAt:1657247748,formattedLastUpdatedAt:"2022\u5e747\u67088\u65e5",frontMatter:{},sidebar:"rules",previous:{title:"prefer-reduce-type-parameter",permalink:"/typescript-eslint-chinese/rules/prefer-reduce-type-parameter"},next:{title:"prefer-return-this-type",permalink:"/typescript-eslint-chinese/rules/prefer-return-this-type"}},s={},u=[{value:"Rule Details",id:"rule-details",level:2},{value:"\u274c Incorrect",id:"-incorrect",level:3},{value:"\u2705 Correct",id:"-correct",level:3},{value:"Options",id:"options",level:2},{value:"When Not To Use It",id:"when-not-to-use-it",level:2}],f={toc:u};function g(e){var t=e.components,r=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"prefer-regexp-exec"},(0,i.kt)("inlineCode",{parentName:"h1"},"prefer-regexp-exec")),(0,i.kt)("p",null,"Enforces ",(0,i.kt)("inlineCode",{parentName:"p"},"RegExp#exec")," over ",(0,i.kt)("inlineCode",{parentName:"p"},"String#match")," if no global flag is provided."),(0,i.kt)("p",null,"As ",(0,i.kt)("inlineCode",{parentName:"p"},"String#match")," is defined to be the same as ",(0,i.kt)("inlineCode",{parentName:"p"},"RegExp#exec")," when the regular expression does not include the ",(0,i.kt)("inlineCode",{parentName:"p"},"g")," flag, prefer a consistent usage."),(0,i.kt)("h2",{id:"rule-details"},"Rule Details"),(0,i.kt)("p",null,"This rule is aimed at enforcing a consistent way to apply regular expressions to strings."),(0,i.kt)("p",null,"From ",(0,i.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match"},(0,i.kt)("inlineCode",{parentName:"a"},"String#match")," on MDN"),":"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"If the regular expression does not include the g flag, returns the same result as ",(0,i.kt)("inlineCode",{parentName:"p"},"RegExp.exec()"),".")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"RegExp#exec")," may also be slightly faster than ",(0,i.kt)("inlineCode",{parentName:"p"},"String#match"),"; this is the reason to choose it as the preferred usage."),(0,i.kt)("p",null,"Examples of code for this rule:"),(0,i.kt)("h3",{id:"-incorrect"},"\u274c Incorrect"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'"something".match(/thing/);\n\n"some things are just things".match(/thing/);\n\nconst text = "something";\nconst search = /thing/;\ntext.match(search);\n')),(0,i.kt)("h3",{id:"-correct"},"\u2705 Correct"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'/thing/.exec("something");\n\n"some things are just things".match(/thing/g);\n\nconst text = "something";\nconst search = /thing/;\nsearch.exec(text);\n')),(0,i.kt)("h2",{id:"options"},"Options"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsonc"},'// .eslintrc.json\n{\n  "rules": {\n    "@typescript-eslint/prefer-regexp-exec": "warn"\n  }\n}\n')),(0,i.kt)("p",null,"This rule is not configurable."),(0,i.kt)("h2",{id:"when-not-to-use-it"},"When Not To Use It"),(0,i.kt)("p",null,"If you prefer consistent use of ",(0,i.kt)("inlineCode",{parentName:"p"},"String#match")," for both, with ",(0,i.kt)("inlineCode",{parentName:"p"},"g")," flag and without it, you can turn this rule off."))}g.isMDXComponent=!0}}]);