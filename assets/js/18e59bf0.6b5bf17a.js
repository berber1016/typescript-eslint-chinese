"use strict";(self.webpackChunktypescript_eslint_chinese=self.webpackChunktypescript_eslint_chinese||[]).push([[9931],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return f}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,l=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=c(t),f=o,h=d["".concat(s,".").concat(f)]||d[f]||p[f]||l;return t?r.createElement(h,a(a({ref:n},u),{},{components:t})):r.createElement(h,a({ref:n},u))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var l=t.length,a=new Array(l);a[0]=d;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var c=2;c<l;c++)a[c]=t[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5372:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return p}});var r=t(3117),o=t(102),l=(t(7294),t(3905)),a=["components"],i={},s="no-non-null-asserted-nullish-coalescing",c={unversionedId:"no-non-null-asserted-nullish-coalescing",id:"no-non-null-asserted-nullish-coalescing",title:"no-non-null-asserted-nullish-coalescing",description:"Disallows non-null assertions in the left operand of a nullish coalescing operator.",source:"@site/rules/no-non-null-asserted-nullish-coalescing.md",sourceDirName:".",slug:"/no-non-null-asserted-nullish-coalescing",permalink:"/typescript-eslint-chinese/rules/no-non-null-asserted-nullish-coalescing",draft:!1,tags:[],version:"current",lastUpdatedBy:"GEARLESS JOE",lastUpdatedAt:1657247748,formattedLastUpdatedAt:"2022\u5e747\u67088\u65e5",frontMatter:{},sidebar:"rules",previous:{title:"no-namespace",permalink:"/typescript-eslint-chinese/rules/no-namespace"},next:{title:"no-non-null-asserted-optional-chain",permalink:"/typescript-eslint-chinese/rules/no-non-null-asserted-optional-chain"}},u={},p=[{value:"Rule Details",id:"rule-details",level:2},{value:"\u274c Incorrect",id:"-incorrect",level:3},{value:"\u2705 Correct",id:"-correct",level:3},{value:"Options",id:"options",level:2},{value:"When Not To Use It",id:"when-not-to-use-it",level:2},{value:"Further Reading",id:"further-reading",level:2}],d={toc:p};function f(e){var n=e.components,t=(0,o.Z)(e,a);return(0,l.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"no-non-null-asserted-nullish-coalescing"},(0,l.kt)("inlineCode",{parentName:"h1"},"no-non-null-asserted-nullish-coalescing")),(0,l.kt)("p",null,"Disallows non-null assertions in the left operand of a nullish coalescing operator."),(0,l.kt)("h2",{id:"rule-details"},"Rule Details"),(0,l.kt)("p",null,"The nullish coalescing operator is designed to provide a default value when dealing with ",(0,l.kt)("inlineCode",{parentName:"p"},"null")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"undefined"),".\nUsing non-null assertions in the left operand of the nullish coalescing operator is redundant."),(0,l.kt)("p",null,"Examples of code for this rule:"),(0,l.kt)("h3",{id:"-incorrect"},"\u274c Incorrect"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},'/* eslint @typescript-eslint/no-non-null-asserted-nullish-coalescing: "error" */\n\nfoo! ?? bar;\nfoo.bazz! ?? bar;\nfoo!.bazz! ?? bar;\nfoo()! ?? bar;\n\nlet x!: string;\nx! ?? "";\n\nlet x: string;\nx = foo();\nx! ?? "";\n')),(0,l.kt)("h3",{id:"-correct"},"\u2705 Correct"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},'/* eslint @typescript-eslint/no-non-null-asserted-nullish-coalescing: "error" */\n\nfoo ?? bar;\nfoo ?? bar!;\nfoo!.bazz ?? bar;\nfoo!.bazz ?? bar!;\nfoo() ?? bar;\n\n// This is considered correct code because there\'s no way for the user to satisfy it.\nlet x: string;\nx! ?? "";\n')),(0,l.kt)("h2",{id:"options"},"Options"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsonc"},'// .eslintrc.json\n{\n  "rules": {\n    "@typescript-eslint/no-non-null-asserted-nullish-coalescing": "warn"\n  }\n}\n')),(0,l.kt)("p",null,"This rule is not configurable."),(0,l.kt)("h2",{id:"when-not-to-use-it"},"When Not To Use It"),(0,l.kt)("p",null,"If you are not using TypeScript 3.7 (or greater), then you will not need to use this rule, as the nullish coalescing operator is not supported."),(0,l.kt)("h2",{id:"further-reading"},"Further Reading"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-7.html"},"TypeScript 3.7 Release Notes")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/tc39/proposal-nullish-coalescing"},"Nullish Coalescing Proposal"))))}f.isMDXComponent=!0}}]);