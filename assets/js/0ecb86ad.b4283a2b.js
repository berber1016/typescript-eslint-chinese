"use strict";(self.webpackChunktypescript_eslint_chinese=self.webpackChunktypescript_eslint_chinese||[]).push([[723],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return d}});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),f=c(r),d=i,h=f["".concat(l,".").concat(d)]||f[d]||u[d]||o;return r?n.createElement(h,s(s({ref:t},p),{},{components:r})):n.createElement(h,s({ref:t},p))}));function d(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,s=new Array(o);s[0]=f;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a.mdxType="string"==typeof e?e:i,s[1]=a;for(var c=2;c<o;c++)s[c]=r[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},1788:function(e,t,r){r.r(t),r.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return a},metadata:function(){return c},toc:function(){return u}});var n=r(3117),i=r(102),o=(r(7294),r(3905)),s=["components"],a={},l="prefer-string-starts-ends-with",c={unversionedId:"prefer-string-starts-ends-with",id:"prefer-string-starts-ends-with",title:"prefer-string-starts-ends-with",description:"Enforces using String#startsWith and String#endsWith over other equivalent methods of checking substrings.",source:"@site/rules/prefer-string-starts-ends-with.md",sourceDirName:".",slug:"/prefer-string-starts-ends-with",permalink:"/typescript-eslint-chinese/rules/prefer-string-starts-ends-with",draft:!1,tags:[],version:"current",lastUpdatedBy:"GEARLESS JOE",lastUpdatedAt:1657247748,formattedLastUpdatedAt:"2022\u5e747\u67088\u65e5",frontMatter:{},sidebar:"rules",previous:{title:"prefer-return-this-type",permalink:"/typescript-eslint-chinese/rules/prefer-return-this-type"},next:{title:"prefer-ts-expect-error",permalink:"/typescript-eslint-chinese/rules/prefer-ts-expect-error"}},p={},u=[{value:"Rule Details",id:"rule-details",level:2},{value:"\u274c Incorrect",id:"-incorrect",level:3},{value:"\u2705 Correct",id:"-correct",level:3},{value:"Options",id:"options",level:2},{value:"When Not To Use It",id:"when-not-to-use-it",level:2}],f={toc:u};function d(e){var t=e.components,r=(0,i.Z)(e,s);return(0,o.kt)("wrapper",(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"prefer-string-starts-ends-with"},(0,o.kt)("inlineCode",{parentName:"h1"},"prefer-string-starts-ends-with")),(0,o.kt)("p",null,"Enforces using ",(0,o.kt)("inlineCode",{parentName:"p"},"String#startsWith")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"String#endsWith")," over other equivalent methods of checking substrings."),(0,o.kt)("p",null,"There are multiple ways to verify if a string starts or ends with a specific string, such as ",(0,o.kt)("inlineCode",{parentName:"p"},"foo.indexOf('bar') === 0"),"."),(0,o.kt)("p",null,"Since ES2015 has added ",(0,o.kt)("inlineCode",{parentName:"p"},"String#startsWith")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"String#endsWith"),", this rule reports other ways to be consistent."),(0,o.kt)("h2",{id:"rule-details"},"Rule Details"),(0,o.kt)("p",null,"This rule is aimed at enforcing a consistent way to check whether a string starts or ends with a specific string."),(0,o.kt)("p",null,"Examples of code for this rule:"),(0,o.kt)("h3",{id:"-incorrect"},"\u274c Incorrect"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'let foo: string;\n\n// starts with\nfoo[0] === "b";\nfoo.charAt(0) === "b";\nfoo.indexOf("bar") === 0;\nfoo.slice(0, 3) === "bar";\nfoo.substring(0, 3) === "bar";\nfoo.match(/^bar/) != null;\n/^bar/.test(foo);\n\n// ends with\nfoo[foo.length - 1] === "b";\nfoo.charAt(foo.length - 1) === "b";\nfoo.lastIndexOf("bar") === foo.length - 3;\nfoo.slice(-3) === "bar";\nfoo.substring(foo.length - 3) === "bar";\nfoo.match(/bar$/) != null;\n/bar$/.test(foo);\n')),(0,o.kt)("h3",{id:"-correct"},"\u2705 Correct"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'foo.startsWith("bar");\nfoo.endsWith("bar");\n')),(0,o.kt)("h2",{id:"options"},"Options"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsonc"},'// .eslintrc.json\n{\n  "rules": {\n    "@typescript-eslint/prefer-string-starts-ends-with": "warn"\n  }\n}\n')),(0,o.kt)("p",null,"This rule is not configurable."),(0,o.kt)("h2",{id:"when-not-to-use-it"},"When Not To Use It"),(0,o.kt)("p",null,"If you don't mind that style, you can turn this rule off safely."))}d.isMDXComponent=!0}}]);