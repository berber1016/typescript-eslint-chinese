"use strict";(self.webpackChunktypescript_eslint_chinese=self.webpackChunktypescript_eslint_chinese||[]).push([[8173],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return d}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},u=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},y=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),y=l(t),d=o,f=y["".concat(c,".").concat(d)]||y[d]||p[d]||a;return t?r.createElement(f,s(s({ref:n},u),{},{components:t})):r.createElement(f,s({ref:n},u))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,s=new Array(a);s[0]=y;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var l=2;l<a;l++)s[l]=t[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}y.displayName="MDXCreateElement"},8829:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return p}});var r=t(3117),o=t(102),a=(t(7294),t(3905)),s=["components"],i={},c="no-unnecessary-type-constraint",l={unversionedId:"no-unnecessary-type-constraint",id:"no-unnecessary-type-constraint",title:"no-unnecessary-type-constraint",description:"Disallows unnecessary constraints on generic types.",source:"@site/rules/no-unnecessary-type-constraint.md",sourceDirName:".",slug:"/no-unnecessary-type-constraint",permalink:"/typescript-eslint-chinese/rules/no-unnecessary-type-constraint",draft:!1,tags:[],version:"current",lastUpdatedBy:"GEARLESS JOE",lastUpdatedAt:1657186506,formattedLastUpdatedAt:"2022\u5e747\u67087\u65e5",frontMatter:{},sidebar:"rules",previous:{title:"no-unnecessary-type-assertion",permalink:"/typescript-eslint-chinese/rules/no-unnecessary-type-assertion"},next:{title:"no-unsafe-argument",permalink:"/typescript-eslint-chinese/rules/no-unsafe-argument"}},u={},p=[{value:"Rule Details",id:"rule-details",level:2},{value:"\u274c Incorrect",id:"-incorrect",level:3},{value:"\u2705 Correct",id:"-correct",level:3},{value:"Options",id:"options",level:2},{value:"When Not To Use It",id:"when-not-to-use-it",level:2}],y={toc:p};function d(e){var n=e.components,t=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,r.Z)({},y,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"no-unnecessary-type-constraint"},(0,a.kt)("inlineCode",{parentName:"h1"},"no-unnecessary-type-constraint")),(0,a.kt)("p",null,"Disallows unnecessary constraints on generic types."),(0,a.kt)("h2",{id:"rule-details"},"Rule Details"),(0,a.kt)("p",null,"Type parameters (",(0,a.kt)("inlineCode",{parentName:"p"},"<T>"),') may be "constrained" with an ',(0,a.kt)("inlineCode",{parentName:"p"},"extends")," keyword (",(0,a.kt)("a",{parentName:"p",href:"https://www.typescriptlang.org/docs/handbook/generics.html#generic-constraints"},"docs"),").\nWhen not provided, type parameters happen to default to:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"As of TypeScript 3.9: ",(0,a.kt)("inlineCode",{parentName:"li"},"unknown")," (",(0,a.kt)("a",{parentName:"li",href:"https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-9.html#type-parameters-that-extend-any-no-longer-act-as-any"},"docs"),")"),(0,a.kt)("li",{parentName:"ul"},"Before that, as of 3.5: ",(0,a.kt)("inlineCode",{parentName:"li"},"any")," (",(0,a.kt)("a",{parentName:"li",href:"https://devblogs.microsoft.com/typescript/announcing-typescript-3-5/#breaking-changes"},"docs"),")")),(0,a.kt)("p",null,"It is therefore redundant to ",(0,a.kt)("inlineCode",{parentName:"p"},"extend")," from these types in later versions of TypeScript."),(0,a.kt)("p",null,"Examples of code for this rule:"),(0,a.kt)("h3",{id:"-incorrect"},"\u274c Incorrect"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"interface FooAny<T extends any> {}\ninterface FooUnknown<T extends unknown> {}\n\ntype BarAny<T extends any> = {};\ntype BarUnknown<T extends unknown> = {};\n\nclass BazAny<T extends any> {\n  quxUnknown<U extends unknown>() {}\n}\n\nclass BazUnknown<T extends unknown> {\n  quxUnknown<U extends unknown>() {}\n}\n\nconst QuuxAny = <T extends any>() => {};\nconst QuuxUnknown = <T extends unknown>() => {};\n\nfunction QuuzAny<T extends any>() {}\nfunction QuuzUnknown<T extends unknown>() {}\n")),(0,a.kt)("h3",{id:"-correct"},"\u2705 Correct"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"interface Foo<T> {}\n\ntype Bar<T> = {};\n\nclass Baz<T> {\n    qux<U> { }\n}\n\nconst Quux = <T>() => {};\n\nfunction Quuz<T>() {}\n")),(0,a.kt)("h2",{id:"options"},"Options"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsonc"},'// .eslintrc.json\n{\n  "rules": {\n    "@typescript-eslint/no-unnecessary-type-constraint": "error"\n  }\n}\n')),(0,a.kt)("p",null,"This rule is not configurable."),(0,a.kt)("h2",{id:"when-not-to-use-it"},"When Not To Use It"),(0,a.kt)("p",null,"If you don't care about the specific styles of your type constraints, or never use them in the first place, then you will not need this rule."))}d.isMDXComponent=!0}}]);