"use strict";(self.webpackChunktypescript_eslint_chinese=self.webpackChunktypescript_eslint_chinese||[]).push([[7659],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return y}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var a=r.createContext({}),s=function(e){var t=r.useContext(a),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(a.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,a=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(n),y=o,f=d["".concat(a,".").concat(y)]||d[y]||u[y]||i;return n?r.createElement(f,c(c({ref:t},p),{},{components:n})):r.createElement(f,c({ref:t},p))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,c=new Array(i);c[0]=d;var l={};for(var a in t)hasOwnProperty.call(t,a)&&(l[a]=t[a]);l.originalType=e,l.mdxType="string"==typeof e?e:o,c[1]=l;for(var s=2;s<i;s++)c[s]=n[s];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2457:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return a},default:function(){return y},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return u}});var r=n(3117),o=n(102),i=(n(7294),n(3905)),c=["components"],l={},a="consistent-indexed-object-style",s={unversionedId:"consistent-indexed-object-style",id:"consistent-indexed-object-style",title:"consistent-indexed-object-style",description:"Requires or disallows the Record type.",source:"@site/rules/consistent-indexed-object-style.md",sourceDirName:".",slug:"/consistent-indexed-object-style",permalink:"/typescript-eslint-chinese/rules/consistent-indexed-object-style",draft:!1,tags:[],version:"current",lastUpdatedBy:"GEARLESS JOE",lastUpdatedAt:1657186506,formattedLastUpdatedAt:"2022\u5e747\u67087\u65e5",frontMatter:{},sidebar:"rules",previous:{title:"consistent-generic-constructors",permalink:"/typescript-eslint-chinese/rules/consistent-generic-constructors"},next:{title:"consistent-type-assertions",permalink:"/typescript-eslint-chinese/rules/consistent-type-assertions"}},p={},u=[{value:"Options",id:"options",level:2},{value:"Rule Details",id:"rule-details",level:2},{value:"<code>record</code>",id:"record",level:3},{value:"\u274c Incorrect",id:"-incorrect",level:4},{value:"\u2705 Correct",id:"-correct",level:4},{value:"<code>index-signature</code>",id:"index-signature",level:3},{value:"\u274c Incorrect",id:"-incorrect-1",level:4},{value:"\u2705 Correct",id:"-correct-1",level:4}],d={toc:u};function y(e){var t=e.components,n=(0,o.Z)(e,c);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"consistent-indexed-object-style"},(0,i.kt)("inlineCode",{parentName:"h1"},"consistent-indexed-object-style")),(0,i.kt)("p",null,"Requires or disallows the ",(0,i.kt)("inlineCode",{parentName:"p"},"Record")," type."),(0,i.kt)("p",null,"TypeScript supports defining object show keys can be flexible using an index signature. TypeScript also has a builtin type named ",(0,i.kt)("inlineCode",{parentName:"p"},"Record")," to create an empty object defining only an index signature. For example, the following types are equal:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"interface Foo {\n  [key: string]: unknown;\n}\n\ntype Foo = {\n  [key: string]: unknown;\n};\n\ntype Foo = Record<string, unknown>;\n")),(0,i.kt)("h2",{id:"options"},"Options"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},'"record"'),": Set to ",(0,i.kt)("inlineCode",{parentName:"li"},'"record"')," to only allow the ",(0,i.kt)("inlineCode",{parentName:"li"},"Record")," type. Set to ",(0,i.kt)("inlineCode",{parentName:"li"},'"index-signature"')," to only allow index signatures. (Defaults to ",(0,i.kt)("inlineCode",{parentName:"li"},'"record"'),")")),(0,i.kt)("p",null,"For example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "@typescript-eslint/consistent-indexed-object-style": [\n    "error",\n    "index-signature"\n  ]\n}\n')),(0,i.kt)("h2",{id:"rule-details"},"Rule Details"),(0,i.kt)("p",null,"This rule enforces a consistent way to define records."),(0,i.kt)("h3",{id:"record"},(0,i.kt)("inlineCode",{parentName:"h3"},"record")),(0,i.kt)("p",null,"Examples of code with ",(0,i.kt)("inlineCode",{parentName:"p"},"record")," option."),(0,i.kt)("h4",{id:"-incorrect"},"\u274c Incorrect"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"interface Foo {\n  [key: string]: unknown;\n}\n\ntype Foo = {\n  [key: string]: unknown;\n};\n")),(0,i.kt)("h4",{id:"-correct"},"\u2705 Correct"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"type Foo = Record<string, unknown>;\n")),(0,i.kt)("h3",{id:"index-signature"},(0,i.kt)("inlineCode",{parentName:"h3"},"index-signature")),(0,i.kt)("p",null,"Examples of code with ",(0,i.kt)("inlineCode",{parentName:"p"},"index-signature")," option."),(0,i.kt)("h4",{id:"-incorrect-1"},"\u274c Incorrect"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"type Foo = Record<string, unknown>;\n")),(0,i.kt)("h4",{id:"-correct-1"},"\u2705 Correct"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"interface Foo {\n  [key: string]: unknown;\n}\n\ntype Foo = {\n  [key: string]: unknown;\n};\n")))}y.isMDXComponent=!0}}]);