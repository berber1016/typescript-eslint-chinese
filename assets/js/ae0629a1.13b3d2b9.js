"use strict";(self.webpackChunktypescript_eslint_chinese=self.webpackChunktypescript_eslint_chinese||[]).push([[7500],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),f=p(r),m=a,d=f["".concat(s,".").concat(m)]||f[m]||u[m]||o;return r?n.createElement(d,l(l({ref:t},c),{},{components:r})):n.createElement(d,l({ref:t},c))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=f;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var p=2;p<o;p++)l[p]=r[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},2018:function(e,t,r){r.r(t),r.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return i},metadata:function(){return p},toc:function(){return u}});var n=r(3117),a=r(102),o=(r(7294),r(3905)),l=["components"],i={},s="triple-slash-reference",p={unversionedId:"triple-slash-reference",id:"triple-slash-reference",title:"triple-slash-reference",description:"Disallows certain triple slash directives in favor of ES6-style import declarations.",source:"@site/rules/triple-slash-reference.md",sourceDirName:".",slug:"/triple-slash-reference",permalink:"/typescript-eslint-chinese/rules/triple-slash-reference",draft:!1,tags:[],version:"current",lastUpdatedBy:"GEARLESS JOE",lastUpdatedAt:1657247748,formattedLastUpdatedAt:"2022\u5e747\u67088\u65e5",frontMatter:{},sidebar:"rules",previous:{title:"switch-exhaustiveness-check",permalink:"/typescript-eslint-chinese/rules/switch-exhaustiveness-check"},next:{title:"type-annotation-spacing",permalink:"/typescript-eslint-chinese/rules/type-annotation-spacing"}},c={},u=[{value:"Rule Details",id:"rule-details",level:2},{value:"Options",id:"options",level:2},{value:"When To Use It",id:"when-to-use-it",level:2},{value:"When Not To Use It",id:"when-not-to-use-it",level:2},{value:"Related To",id:"related-to",level:2}],f={toc:u};function m(e){var t=e.components,r=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"triple-slash-reference"},(0,o.kt)("inlineCode",{parentName:"h1"},"triple-slash-reference")),(0,o.kt)("p",null,"Disallows certain triple slash directives in favor of ES6-style import declarations."),(0,o.kt)("p",null,"Use of triple-slash reference type directives is discouraged in favor of the newer ",(0,o.kt)("inlineCode",{parentName:"p"},"import")," style. This rule allows you to ban use of ",(0,o.kt)("inlineCode",{parentName:"p"},'/// <reference path="" />'),", ",(0,o.kt)("inlineCode",{parentName:"p"},'/// <reference types="" />'),", or ",(0,o.kt)("inlineCode",{parentName:"p"},'/// <reference lib="" />')," directives."),(0,o.kt)("h2",{id:"rule-details"},"Rule Details"),(0,o.kt)("p",null,"With ",(0,o.kt)("inlineCode",{parentName:"p"},'{ "path": "never", "types": "never", "lib": "never" }')," options set, the following will all be ",(0,o.kt)("strong",{parentName:"p"},"incorrect")," usage:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'/// <reference path="foo" />\n/// <reference types="bar" />\n/// <reference lib="baz" />\n')),(0,o.kt)("p",null,"Examples of ",(0,o.kt)("strong",{parentName:"p"},"incorrect")," code for the ",(0,o.kt)("inlineCode",{parentName:"p"},'{ "types": "prefer-import" }')," option. Note that these are only errors when ",(0,o.kt)("strong",{parentName:"p"},"both")," styles are used for the ",(0,o.kt)("strong",{parentName:"p"},"same")," module:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'/// <reference types="foo" />\nimport * as foo from "foo";\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'/// <reference types="foo" />\nimport foo = require("foo");\n')),(0,o.kt)("p",null,"With ",(0,o.kt)("inlineCode",{parentName:"p"},'{ "path": "always", "types": "always", "lib": "always" }')," options set, the following will all be ",(0,o.kt)("strong",{parentName:"p"},"correct")," usage:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'/// <reference path="foo" />\n/// <reference types="bar" />\n/// <reference lib="baz" />\n')),(0,o.kt)("p",null,"Examples of ",(0,o.kt)("strong",{parentName:"p"},"correct")," code for the ",(0,o.kt)("inlineCode",{parentName:"p"},'{ "types": "prefer-import" }')," option:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import * as foo from "foo";\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import foo = require("foo");\n')),(0,o.kt)("h2",{id:"options"},"Options"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'type Options = {\n  lib?: "always" | "never";\n  path?: "always" | "never";\n  types?: "always" | "never" | "prefer-import";\n};\n\nconst defaultOptions: Options = {\n  lib: "always",\n  path: "never",\n  types: "prefer-import",\n};\n')),(0,o.kt)("h2",{id:"when-to-use-it"},"When To Use It"),(0,o.kt)("p",null,"If you want to ban use of one or all of the triple slash reference directives, or any time you might use triple-slash type reference directives and ES6 import declarations in the same file."),(0,o.kt)("h2",{id:"when-not-to-use-it"},"When Not To Use It"),(0,o.kt)("p",null,"If you want to use all flavors of triple slash reference directives."),(0,o.kt)("h2",{id:"related-to"},"Related To"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"TSLint: ",(0,o.kt)("a",{parentName:"li",href:"http://palantir.github.io/tslint/rules/no-reference/"},"no-reference")),(0,o.kt)("li",{parentName:"ul"},"TSLint: ",(0,o.kt)("a",{parentName:"li",href:"https://palantir.github.io/tslint/rules/no-reference-import/"},"no-reference-import"))))}m.isMDXComponent=!0}}]);