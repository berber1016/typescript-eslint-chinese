"use strict";(self.webpackChunktypescript_eslint_chinese=self.webpackChunktypescript_eslint_chinese||[]).push([[1979],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=i.createContext({}),p=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=p(e.components);return i.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(n),m=r,h=d["".concat(s,".").concat(m)]||d[m]||c[m]||o;return n?i.createElement(h,a(a({ref:t},u),{},{components:n})):i.createElement(h,a({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,a[1]=l;for(var p=2;p<o;p++)a[p]=n[p];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9022:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return u},default:function(){return f},frontMatter:function(){return p},metadata:function(){return c},toc:function(){return m}});var i=n(3117),r=n(102),o=(n(7294),n(3905)),a=n(5488),l=n(5162),s=["components"],p={id:"troubleshooting",title:"\u6392\u67e5\u95ee\u9898 & FAQs",sidebar_label:"Troubleshooting & FAQs"},u=void 0,c={unversionedId:"linting/troubleshooting",id:"linting/troubleshooting",title:"\u6392\u67e5\u95ee\u9898 & FAQs",description:"\u6211\u4f7f\u7528\u4e86\u4e00\u4e2a\u6765\u81ea ESLint \u6838\u5fc3\u89c4\u5219\uff0c\u4f46\u662f\u5b83\u5728 TypeScript \u4ee3\u7801\u4e2d\u6b63\u5e38\u5de5\u4f5c",source:"@site/docs/linting/TROUBLESHOOTING.md",sourceDirName:"linting",slug:"/linting/troubleshooting",permalink:"/typescript-eslint-chinese/docs/linting/troubleshooting",draft:!1,tags:[],version:"current",lastUpdatedBy:"GEARLESS JOE",lastUpdatedAt:1657247748,formattedLastUpdatedAt:"2022\u5e747\u67088\u65e5",frontMatter:{id:"troubleshooting",title:"\u6392\u67e5\u95ee\u9898 & FAQs",sidebar_label:"Troubleshooting & FAQs"},sidebar:"docs",previous:{title:"Monorepo Configuration",permalink:"/typescript-eslint-chinese/docs/linting/monorepo"},next:{title:"What About TSLint?",permalink:"/typescript-eslint-chinese/docs/linting/tslint"}},d={},m=[{value:"\u6211\u4f7f\u7528\u4e86\u4e00\u4e2a\u6765\u81ea ESLint \u6838\u5fc3\u89c4\u5219\uff0c\u4f46\u662f\u5b83\u5728 TypeScript \u4ee3\u7801\u4e2d\u6b63\u5e38\u5de5\u4f5c",id:"\u6211\u4f7f\u7528\u4e86\u4e00\u4e2a\u6765\u81ea-eslint-\u6838\u5fc3\u89c4\u5219\u4f46\u662f\u5b83\u5728-typescript-\u4ee3\u7801\u4e2d\u6b63\u5e38\u5de5\u4f5c",level:2},{value:"\u6211\u5f97\u5230\u4e00\u4e2a error\uff0c\u5b83\u544a\u8bc9\u6211 &quot;The file must be included in at least one of the projects provided&quot;",id:"\u6211\u5f97\u5230\u4e00\u4e2a-error\u5b83\u544a\u8bc9\u6211-the-file-must-be-included-in-at-least-one-of-the-projects-provided",level:2},{value:"\u6211\u662f\u4f7f\u7528\u4e86\u4e00\u4e2a\u9700\u8981\u81ea\u5b9a\u4e49\u6587\u4ef6\u62d3\u5c55\u540d\u7684\u6846\u67b6(\u4f8b\u5982 Vue)\uff0c\u6211\u5f97\u5230\u8fd9\u6837\u4e00\u4e2a\u9519\u8bef &quot;You should add <code>parserOptions.extraFileExtensions</code> to your config",id:"\u6211\u662f\u4f7f\u7528\u4e86\u4e00\u4e2a\u9700\u8981\u81ea\u5b9a\u4e49\u6587\u4ef6\u62d3\u5c55\u540d\u7684\u6846\u67b6\u4f8b\u5982-vue\u6211\u5f97\u5230\u8fd9\u6837\u4e00\u4e2a\u9519\u8bef-you-should-add-parseroptionsextrafileextensions-to-your-config",level:2},{value:"\u6211\u7684\u4e00\u4e2a lint \u89c4\u5219\u5728\u7eaf JavaScript \u6587\u4ef6\u4e0a\u4e0d\u80fd\u6b63\u5e38\u5de5\u4f5c\u3002",id:"\u6211\u7684\u4e00\u4e2a-lint-\u89c4\u5219\u5728\u7eaf-javascript-\u6587\u4ef6\u4e0a\u4e0d\u80fd\u6b63\u5e38\u5de5\u4f5c",level:2},{value:"TypeScript should be installed locally",id:"typescript-should-be-installed-locally",level:2},{value:"How can I ban <code>&lt;specific language feature&gt;</code>?",id:"how-can-i-ban-specific-language-feature",level:2},{value:"Why don&#39;t I see TypeScript errors in my ESLint output?",id:"why-dont-i-see-typescript-errors-in-my-eslint-output",level:2},{value:"I get errors from the <code>no-undef</code> rule about global variables not being defined, even though there are no TypeScript errors",id:"i-get-errors-from-the-no-undef-rule-about-global-variables-not-being-defined-even-though-there-are-no-typescript-errors",level:2},{value:"How do I check to see what versions are installed?",id:"how-do-i-check-to-see-what-versions-are-installed",level:2},{value:"How can I specify a TypeScript version / <code>parserOptions.typescriptLocation</code>?",id:"how-can-i-specify-a-typescript-version--parseroptionstypescriptlocation",level:2},{value:"My linting feels really slow",id:"my-linting-feels-really-slow",level:2},{value:"Wide includes in your <code>tsconfig</code>",id:"wide-includes-in-your-tsconfig",level:3},{value:"Wide includes in your ESLint options",id:"wide-includes-in-your-eslint-options",level:3},{value:"<code>eslint-plugin-prettier</code>",id:"eslint-plugin-prettier",level:3},{value:"<code>eslint-plugin-import</code>",id:"eslint-plugin-import",level:3},{value:"The <code>indent</code> / <code>@typescript-eslint/indent</code> rules",id:"the-indent--typescript-eslintindent-rules",level:3}],h={toc:m};function f(e){var t=e.components,n=(0,r.Z)(e,s);return(0,o.kt)("wrapper",(0,i.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"\u6211\u4f7f\u7528\u4e86\u4e00\u4e2a\u6765\u81ea-eslint-\u6838\u5fc3\u89c4\u5219\u4f46\u662f\u5b83\u5728-typescript-\u4ee3\u7801\u4e2d\u6b63\u5e38\u5de5\u4f5c"},"\u6211\u4f7f\u7528\u4e86\u4e00\u4e2a\u6765\u81ea ESLint \u6838\u5fc3\u89c4\u5219\uff0c\u4f46\u662f\u5b83\u5728 TypeScript \u4ee3\u7801\u4e2d\u6b63\u5e38\u5de5\u4f5c"),(0,o.kt)("p",null,"\u8fd9\u662f\u56e0\u4e3a TypeScript \u6dfb\u52a0\u4e86 ESLint \u5e76\u4e0d\u77e5\u9053\u7684\u65b0\u7279\u6027\u3002"),(0,o.kt)("p",null,"\u7b2c\u4e00\u6b65\uff0c",(0,o.kt)("a",{parentName:"p",href:"https://typescript-eslint.io/rules/#extension-rules"},'\u70b9\u51fb\u8fd9\u91cc\u67e5\u770b\u6211\u4eec\u7684 "extension" \u89c4\u5219\u5217\u8868'),".\n\u62d3\u5c55(extension)\u89c4\u5219\u662f\u4e00\u79cd\u62d3\u5c55 ESLint \u89c4\u5219\u6765\u652f\u6301 TypeScript \u8bed\u6cd5\u7684\u89c4\u5219\u3002\n\u5982\u679c\u4f60\u5728\u8fd9\u91cc\u627e\u5230\u4e86\u5b83, give it a go to see if it works for you.\n\u4f60\u53ef\u4ee5\u901a\u8fc7\u7981\u7528\u57fa\u672c\u89c4\u5219\u548c\u542f\u7528\u62d3\u5c55(extension)\u89c4\u5219\u6765\u914d\u7f6e\u5b83\u3002\n\u8fd9\u91cc\u6709\u4e00\u4e2a\u5173\u4e8e ",(0,o.kt)("inlineCode",{parentName:"p"},"semi")," \u89c4\u5219\u7684\u4f8b\u5b50\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "rules": {\n    "semi": "off",\n    "@typescript-eslint/semi": "error"\n  }\n}\n')),(0,o.kt)("p",null,"\u5982\u679c\u4f60\u5e76\u6ca1\u6709\u627e\u5230\u4e00\u4e2a\u73b0\u6709\u7684\u62d3\u5c55(extension)\u89c4\u5219\uff0c\u6216\u8005\u62d3\u5c55(extension)\u89c4\u5219\u5bf9\u4f60\u7684 case \u5e76\u4e0d\u8d77\u4f5c\u7528\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u7ee7\u7eed\u53bb\u67e5\u6211\u4eec\u7684 issue\u3002\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/typescript-eslint/typescript-eslint/blob/main/CONTRIBUTING.md#raising-issues"},"The contributing guide outlines the best way to raise an issue"),"."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"\u6211\u4eec\u6bcf\u5468\u90fd\u4f1a\u53d1\u5e03\u4e00\u4e2a\u65b0\u7684\u7248\u672c\u3002\n",(0,o.kt)("strong",{parentName:"p"},"\u5728\u63d0\u4ea4 issue \u524d"),"\uff0c\u8bf7\u786e\u4fdd\u4f60\u5df2\u7ecf\u68c0\u67e5\u4e86\u6211\u4eec\u6700\u65b0\u7248\u672c\u7684",(0,o.kt)("a",{parentName:"p",href:"https://typescript-eslint.io/rules/#extension-rules"},"\u62d3\u5c55(extension)\u89c4\u5219\u5217\u8868"))),(0,o.kt)("h2",{id:"\u6211\u5f97\u5230\u4e00\u4e2a-error\u5b83\u544a\u8bc9\u6211-the-file-must-be-included-in-at-least-one-of-the-projects-provided"},'\u6211\u5f97\u5230\u4e00\u4e2a error\uff0c\u5b83\u544a\u8bc9\u6211 "The file must be included in at least one of the projects provided"'),(0,o.kt)("p",null,"\u8fd9\u4e2a\u9519\u8bef\u610f\u5473\u7740\u6b63\u5728\u68c0\u6d4b\u7684\u8fd9\u4e2a\u6587\u4ef6\uff0c\u5e76\u4e0d\u5728\u4f60\u63d0\u4f9b\u7684\u4efb\u4f55\u4e00\u4e2a tsconfig \u6587\u4ef6\u4e2d\u3002\n\u5f53\u7528\u6237\u6709\u6d4b\u8bd5\u6587\u4ef6\u3001\u914d\u7f6e\u6587\u4ef6\u6216\u7c7b\u4f3c\u7684\u6587\u4ef6\u6ca1\u6709\u5305\u542b\u65f6\uff0c\u5c31\u4f1a\u53d1\u751f\u8fd9\u6837\u7684\u60c5\u51b5\u3002"),(0,o.kt)("p",null,"\u6839\u636e\u60a8\u60f3\u8981\u8fbe\u5230\u7684\u76ee\u7684\uff0c\u6709\u51e0\u4e2a\u89e3\u51b3\u65b9\u6848\u3002"),(0,o.kt)("p",null,"\u8bf7\u53c2\u8003\u6211\u4eec\u7684\u6587\u6863 ",(0,o.kt)("a",{parentName:"p",href:"/typescript-eslint-chinese/docs/linting/type-linting#i-get-errors-telling-me-the-file-must-be-included-in-at-least-one-of-the-projects-provided"},"type aware linting")," \u6765\u83b7\u53d6\u89e3\u51b3\u65b9\u6848."),(0,o.kt)("h2",{id:"\u6211\u662f\u4f7f\u7528\u4e86\u4e00\u4e2a\u9700\u8981\u81ea\u5b9a\u4e49\u6587\u4ef6\u62d3\u5c55\u540d\u7684\u6846\u67b6\u4f8b\u5982-vue\u6211\u5f97\u5230\u8fd9\u6837\u4e00\u4e2a\u9519\u8bef-you-should-add-parseroptionsextrafileextensions-to-your-config"},'\u6211\u662f\u4f7f\u7528\u4e86\u4e00\u4e2a\u9700\u8981\u81ea\u5b9a\u4e49\u6587\u4ef6\u62d3\u5c55\u540d\u7684\u6846\u67b6(\u4f8b\u5982 Vue)\uff0c\u6211\u5f97\u5230\u8fd9\u6837\u4e00\u4e2a\u9519\u8bef "You should add ',(0,o.kt)("inlineCode",{parentName:"h2"},"parserOptions.extraFileExtensions")," to your config"),(0,o.kt)("p",null,"\u4f60\u53ef\u4ee5\u4f7f\u7528 ",(0,o.kt)("inlineCode",{parentName:"p"},"parserOptions.extraFileExtensions")," \u53bb\u6307\u5b9a\u4e00\u4e2a\u5141\u8bb8 \u975e TypeScript \u62d3\u5c55\u540d\u7684\u6570\u7ec4\uff0c\u4f8b\u5982\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title=".eslintrc.js"',title:'".eslintrc.js"'},'module.exports = {\n  parserOptions: {\n    tsconfigRootDir: __dirname,\n    project: ["./tsconfig.json"],\n    // Add this line\n    extraFileExtensions: [".vue"],\n  },\n};\n')),(0,o.kt)("h2",{id:"\u6211\u7684\u4e00\u4e2a-lint-\u89c4\u5219\u5728\u7eaf-javascript-\u6587\u4ef6\u4e0a\u4e0d\u80fd\u6b63\u5e38\u5de5\u4f5c"},"\u6211\u7684\u4e00\u4e2a lint \u89c4\u5219\u5728\u7eaf JavaScript \u6587\u4ef6\u4e0a\u4e0d\u80fd\u6b63\u5e38\u5de5\u4f5c\u3002"),(0,o.kt)("p",null,"This is to be expected - ESLint rules do not check file extensions on purpose, as it causes issues in environments that use non-standard extensions (for example, a ",(0,o.kt)("inlineCode",{parentName:"p"},".vue")," and a ",(0,o.kt)("inlineCode",{parentName:"p"},".md")," file can both contain TypeScript code to be linted)."),(0,o.kt)("p",null,"If you have some pure JavaScript code that you do not want to apply certain lint rules to, then you can use ",(0,o.kt)("a",{parentName:"p",href:"https://eslint.org/docs/user-guide/configuring#configuration-based-on-glob-patterns"},"ESLint's ",(0,o.kt)("inlineCode",{parentName:"a"},"overrides")," configuration")," to turn off certain rules, or even change the parser based on glob patterns."),(0,o.kt)("h2",{id:"typescript-should-be-installed-locally"},"TypeScript should be installed locally"),(0,o.kt)("p",null,"Make sure that you have installed TypeScript locally i.e. by using ",(0,o.kt)("inlineCode",{parentName:"p"},"npm install typescript"),", not ",(0,o.kt)("inlineCode",{parentName:"p"},"npm install -g typescript"),",\nor by using ",(0,o.kt)("inlineCode",{parentName:"p"},"yarn add typescript"),", not ",(0,o.kt)("inlineCode",{parentName:"p"},"yarn global add typescript"),".\nSee ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/typescript-eslint/typescript-eslint/issues/2041"},"#2041")," for more information."),(0,o.kt)("h2",{id:"how-can-i-ban-specific-language-feature"},"How can I ban ",(0,o.kt)("inlineCode",{parentName:"h2"},"<specific language feature>"),"?"),(0,o.kt)("p",null,"ESLint core contains the rule ",(0,o.kt)("a",{parentName:"p",href:"https://eslint.org/docs/rules/no-restricted-syntax"},(0,o.kt)("inlineCode",{parentName:"a"},"no-restricted-syntax")),".\nThis generic rule allows you to specify a ",(0,o.kt)("a",{parentName:"p",href:"https://eslint.org/docs/developer-guide/selectors"},"selector")," for the code you want to ban, along with a custom error message."),(0,o.kt)("p",null,"You can use an AST visualization tool such as ",(0,o.kt)("a",{parentName:"p",href:"https://typescript-eslint.io/play#showAST=es"},"TypeScript ESLint playground")," > ",(0,o.kt)("em",{parentName:"p"},"Options")," > ",(0,o.kt)("em",{parentName:"p"},"AST Explorer")," on its left sidebar by selecting ",(0,o.kt)("em",{parentName:"p"},"ESTree")," to help in figuring out the structure of the AST that you want to ban."),(0,o.kt)("p",null,"For example, you can ban enums (or some variation of) using one of the following configs:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsonc"},'{\n  "rules": {\n    "no-restricted-syntax": [\n      "error",\n      // ban all enums\n      {\n        "selector": "TSEnumDeclaration",\n        "message": "My reason for not using any enums at all"\n      },\n\n      // ban just const enums\n      {\n        "selector": "TSEnumDeclaration[const=true]",\n        "message": "My reason for not using const enums"\n      },\n\n      // ban just non-const enums\n      {\n        "selector": "TSEnumDeclaration:not([const=true])",\n        "message": "My reason for not using non-const enums"\n      }\n    ]\n  }\n}\n')),(0,o.kt)("h2",{id:"why-dont-i-see-typescript-errors-in-my-eslint-output"},"Why don't I see TypeScript errors in my ESLint output?"),(0,o.kt)("p",null,"TypeScript's compiler (or whatever your build chain may be) is specifically designed and built to validate the correctness of your codebase.\nOur tooling does not reproduce the errors that TypeScript provides, because doing so would slow down the lint run ","[1]",", and duplicate the errors that TypeScript already outputs for you."),(0,o.kt)("p",null,"Instead, our tooling exists to ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"augment"))," TypeScript's built in checks with lint rules that consume the type information in new ways beyond just verifying the runtime correctness of your code."),(0,o.kt)("p",null,"[1]"," - TypeScript computes type information lazily, so us asking for the errors it would produce from the compiler would take an ",(0,o.kt)("em",{parentName:"p"},"additional")," ~100ms per file.\nThis doesn't sound like a lot, but depending on the size of your codebase, it can easily add up to between several seconds to several minutes to a lint run."),(0,o.kt)("h2",{id:"i-get-errors-from-the-no-undef-rule-about-global-variables-not-being-defined-even-though-there-are-no-typescript-errors"},"I get errors from the ",(0,o.kt)("inlineCode",{parentName:"h2"},"no-undef")," rule about global variables not being defined, even though there are no TypeScript errors"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"no-undef")," lint rule does not use TypeScript to determine the global variables that exist - instead, it relies upon ESLint's configuration."),(0,o.kt)("p",null,"We strongly recommend that you do not use the ",(0,o.kt)("inlineCode",{parentName:"p"},"no-undef")," lint rule on TypeScript projects.\nThe checks it provides are already provided by TypeScript without the need for configuration - TypeScript just does this significantly better."),(0,o.kt)("p",null,"As of our v4.0.0 release, this also applies to types.\nIf you use global types from a 3rd party package (i.e. anything from an ",(0,o.kt)("inlineCode",{parentName:"p"},"@types")," package), then you will have to configure ESLint appropriately to define these global types.\nFor example; the ",(0,o.kt)("inlineCode",{parentName:"p"},"JSX")," namespace from ",(0,o.kt)("inlineCode",{parentName:"p"},"@types/react")," is a global 3rd party type that you must define in your ESLint config."),(0,o.kt)("p",null,"Note, that for a mixed project including JavaScript and TypeScript, the ",(0,o.kt)("inlineCode",{parentName:"p"},"no-undef")," rule (like any rule) can be turned off for TypeScript files alone by adding an ",(0,o.kt)("inlineCode",{parentName:"p"},"overrides")," section to ",(0,o.kt)("inlineCode",{parentName:"p"},".eslintrc.cjs"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title=".eslintrc.cjs"',title:'".eslintrc.cjs"'},'module.exports = {\n  // ... the rest of your config ...\n  overrides: [\n    {\n      files: ["*.ts", "*.mts", "*.cts", "*.tsx"],\n      rules: {\n        "no-undef": "off",\n      },\n    },\n  ],\n};\n')),(0,o.kt)("p",null,"If you choose to leave on the ESLint ",(0,o.kt)("inlineCode",{parentName:"p"},"no-undef")," lint rule, you can ",(0,o.kt)("a",{parentName:"p",href:"https://eslint.org/docs/user-guide/configuring/language-options#specifying-globals"},"manually define the set of allowed ",(0,o.kt)("inlineCode",{parentName:"a"},"globals")," in your ESLint config"),", and/or you can use one of the ",(0,o.kt)("a",{parentName:"p",href:"https://eslint.org/docs/user-guide/configuring/language-options#specifying-environments"},"pre-defined environment (",(0,o.kt)("inlineCode",{parentName:"a"},"env"),") configurations"),"."),(0,o.kt)("h2",{id:"how-do-i-check-to-see-what-versions-are-installed"},"How do I check to see what versions are installed?"),(0,o.kt)("p",null,"If you have multiple versions of our tooling, it can cause various bugs for you.\nThis is because ESLint may load a different version each run depending on how you run it - leading to inconsistent lint results."),(0,o.kt)("p",null,"Installing our tooling in the root of your project does not mean that only one version is installed.\nOne or more of your dependencies may have its own dependency on our tooling, meaning ",(0,o.kt)("inlineCode",{parentName:"p"},"npm"),"/",(0,o.kt)("inlineCode",{parentName:"p"},"yarn")," will additionally install that version for use by that package.\nFor example, ",(0,o.kt)("inlineCode",{parentName:"p"},"react-scripts")," (part of ",(0,o.kt)("inlineCode",{parentName:"p"},"create-react-app"),") has a dependency on our tooling."),(0,o.kt)("p",null,"You can check what versions are installed in your project using the following commands:"),(0,o.kt)(a.Z,{groupId:"npm2yarn",mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"npm",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm list @typescript-eslint/eslint-plugin @typescript-eslint/parser\n"))),(0,o.kt)(l.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"yarn list @typescript-eslint/eslint-plugin @typescript-eslint/parser\n# couldn't auto-convert command\n")))),(0,o.kt)("p",null,"If you see more than one version installed, then you will have to either use ",(0,o.kt)("a",{parentName:"p",href:"https://classic.yarnpkg.com/en/docs/selective-version-resolutions"},"yarn resolutions")," to force a single version, or you will have to downgrade your root versions to match the dependency versions."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"The best course of action in this case is to wait until your dependency releases a new version with support for our latest versions.")),(0,o.kt)("h2",{id:"how-can-i-specify-a-typescript-version--parseroptionstypescriptlocation"},"How can I specify a TypeScript version / ",(0,o.kt)("inlineCode",{parentName:"h2"},"parserOptions.typescriptLocation"),"?"),(0,o.kt)("p",null,"You can't, and you don't want to."),(0,o.kt)("p",null,"You should use the same version of TypeScript for linting as the rest of your project.\nTypeScript versions often have slight differences in edge cases that can cause contradictory information between typescript-eslint rules and editor information.\nFor example:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"@typescript-eslint/strict-boolean-expressions")," might be operating with TypeScript version ",(0,o.kt)("em",{parentName:"li"},"X")," and think a variable is ",(0,o.kt)("inlineCode",{parentName:"li"},"string[] | undefined")),(0,o.kt)("li",{parentName:"ul"},"TypeScript itself might be on version ",(0,o.kt)("em",{parentName:"li"},"X+1-beta")," and think the variable is ",(0,o.kt)("inlineCode",{parentName:"li"},"string[]"))),(0,o.kt)("p",null,"See ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/typescript-eslint/typescript-eslint/issues/4102#issuecomment-963265514"},"this issue comment")," for more details."),(0,o.kt)("h2",{id:"my-linting-feels-really-slow"},"My linting feels really slow"),(0,o.kt)("p",null,"As mentioned in the ",(0,o.kt)("a",{parentName:"p",href:"/typescript-eslint-chinese/docs/linting/type-linting"},"type-aware linting doc"),", if you're using type-aware linting, your lint times should be roughly the same as your build times."),(0,o.kt)("p",null,"If you're experiencing times much slower than that, then there are a few common culprits."),(0,o.kt)("h3",{id:"wide-includes-in-your-tsconfig"},"Wide includes in your ",(0,o.kt)("inlineCode",{parentName:"h3"},"tsconfig")),(0,o.kt)("p",null,"When using type-aware linting, you provide us with one or more tsconfigs.\nWe then will pre-parse all files so that full and complete type information is available."),(0,o.kt)("p",null,"If you provide very wide globs in your ",(0,o.kt)("inlineCode",{parentName:"p"},"include")," (such as ",(0,o.kt)("inlineCode",{parentName:"p"},"**/*"),"), it can cause many more files than you expect to be included in this pre-parse.\nAdditionally, if you provide no ",(0,o.kt)("inlineCode",{parentName:"p"},"include")," in your tsconfig, then it is the same as providing the widest glob."),(0,o.kt)("p",null,"Wide globs can cause TypeScript to parse things like build artifacts, which can heavily impact performance.\nAlways ensure you provide globs targeted at the folders you are specifically wanting to lint."),(0,o.kt)("h3",{id:"wide-includes-in-your-eslint-options"},"Wide includes in your ESLint options"),(0,o.kt)("p",null,"Specifying ",(0,o.kt)("inlineCode",{parentName:"p"},"tsconfig.json")," paths in your ESLint commands is also likely to cause much more disk IO than expected.\nInstead of globs that use ",(0,o.kt)("inlineCode",{parentName:"p"},"**")," to recursively check all folders, prefer paths that use a single ",(0,o.kt)("inlineCode",{parentName:"p"},"*")," at a time."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-diff"},"- eslint --parser-options project:./**/tsconfig.json\n+ eslint --parser-options project:./packages/*/tsconfig.json\n")),(0,o.kt)("p",null,"See ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/typescript-eslint/typescript-eslint/issues/2611"},'Glob pattern in parser\'s option "project" slows down linting')," for more details."),(0,o.kt)("h3",{id:"eslint-plugin-prettier"},(0,o.kt)("inlineCode",{parentName:"h3"},"eslint-plugin-prettier")),(0,o.kt)("p",null,"This plugin surfaces prettier formatting problems at lint time, helping to ensure your code is always formatted.\nHowever this comes at a quite a large cost - in order to figure out if there is a difference, it has to do a prettier format on every file being linted.\nThis means that each file will be parsed twice - once by ESLint, and once by Prettier.\nThis can add up for large codebases."),(0,o.kt)("p",null,"Instead of using this plugin, we recommend using prettier's ",(0,o.kt)("inlineCode",{parentName:"p"},"--list-different")," flag to detect if a file has not been correctly formatted.\nFor example, our CI is setup to run the following command automatically, which blocks PRs that have not been formatted:"),(0,o.kt)(a.Z,{groupId:"npm2yarn",mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"npm",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'npm run prettier --list-different \\"./**/*.{ts,mts,cts,tsx,js,mjs,cjs,jsx,json,md,css}\\"\n'))),(0,o.kt)(l.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'yarn run prettier --list-different \\"./**/*.{ts,mts,cts,tsx,js,mjs,cjs,jsx,json,md,css}\\"\n')))),(0,o.kt)("h3",{id:"eslint-plugin-import"},(0,o.kt)("inlineCode",{parentName:"h3"},"eslint-plugin-import")),(0,o.kt)("p",null,"This is another great plugin that we use ourselves in this project.\nHowever there are a few rules which can cause your lints to be really slow, because they cause the plugin to do its own parsing, and file tracking.\nThis double parsing adds up for large codebases."),(0,o.kt)("p",null,"There are many rules that do single file static analysis, but we provide the following recommendations."),(0,o.kt)("p",null,"We recommend you do not use the following rules, as TypeScript provides the same checks as part of standard type checking:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"import/named")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"import/namespace")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"import/default")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"import/no-named-as-default-member"))),(0,o.kt)("p",null,"The following rules do not have equivalent checks in TypeScript, so we recommend that you only run them at CI/push time, to lessen the local performance burden."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"import/no-named-as-default")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"import/no-cycle")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"import/no-unused-modules")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"import/no-deprecated"))),(0,o.kt)("h3",{id:"the-indent--typescript-eslintindent-rules"},"The ",(0,o.kt)("inlineCode",{parentName:"h3"},"indent")," / ",(0,o.kt)("inlineCode",{parentName:"h3"},"@typescript-eslint/indent")," rules"),(0,o.kt)("p",null,"This rule helps ensure your codebase follows a consistent indentation pattern.\nHowever this involves a ",(0,o.kt)("em",{parentName:"p"},"lot")," of computations across every single token in a file.\nAcross a large codebase, these can add up, and severely impact performance."),(0,o.kt)("p",null,"We recommend not using this rule, and instead using a tool like ",(0,o.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/prettier"},(0,o.kt)("inlineCode",{parentName:"a"},"prettier"))," to enforce a standardized formatting."))}f.isMDXComponent=!0},5162:function(e,t,n){n.d(t,{Z:function(){return a}});var i=n(7294),r=n(4334),o="tabItem_Ymn6";function a(e){var t=e.children,n=e.hidden,a=e.className;return i.createElement("div",{role:"tabpanel",className:(0,r.Z)(o,a),hidden:n},t)}},5488:function(e,t,n){n.d(t,{Z:function(){return m}});var i=n(3117),r=n(7294),o=n(4334),a=n(2389),l=n(7392),s=n(7094),p=n(2466),u="tabList__CuJ",c="tabItem_LNqP";function d(e){var t,n,a=e.lazy,d=e.block,m=e.defaultValue,h=e.values,f=e.groupId,y=e.className,g=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),k=null!=h?h:g.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),v=(0,l.l)(k,(function(e,t){return e.value===t.value}));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var b=null===m?m:null!=(t=null!=m?m:null==(n=g.find((function(e){return e.props.default})))?void 0:n.props.value)?t:g[0].props.value;if(null!==b&&!k.some((function(e){return e.value===b})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+b+'" but none of its children has the corresponding value. Available values are: '+k.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var N=(0,s.U)(),w=N.tabGroupChoices,T=N.setTabGroupChoices,S=(0,r.useState)(b),C=S[0],x=S[1],j=[],E=(0,p.o5)().blockElementScrollPositionUntilNextRender;if(null!=f){var O=w[f];null!=O&&O!==C&&k.some((function(e){return e.value===O}))&&x(O)}var I=function(e){var t=e.currentTarget,n=j.indexOf(t),i=k[n].value;i!==C&&(E(t),x(i),null!=f&&T(f,String(i)))},L=function(e){var t,n=null;switch(e.key){case"ArrowRight":var i,r=j.indexOf(e.currentTarget)+1;n=null!=(i=j[r])?i:j[0];break;case"ArrowLeft":var o,a=j.indexOf(e.currentTarget)-1;n=null!=(o=j[a])?o:j[j.length-1]}null==(t=n)||t.focus()};return r.createElement("div",{className:(0,o.Z)("tabs-container",u)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":d},y)},k.map((function(e){var t=e.value,n=e.label,a=e.attributes;return r.createElement("li",(0,i.Z)({role:"tab",tabIndex:C===t?0:-1,"aria-selected":C===t,key:t,ref:function(e){return j.push(e)},onKeyDown:L,onFocus:I,onClick:I},a,{className:(0,o.Z)("tabs__item",c,null==a?void 0:a.className,{"tabs__item--active":C===t})}),null!=n?n:t)}))),a?(0,r.cloneElement)(g.filter((function(e){return e.props.value===C}))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},g.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==C})}))))}function m(e){var t=(0,a.Z)();return r.createElement(d,(0,i.Z)({key:String(t)},e))}}}]);