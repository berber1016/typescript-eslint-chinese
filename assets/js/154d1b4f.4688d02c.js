"use strict";(self.webpackChunktypescript_eslint_chinese=self.webpackChunktypescript_eslint_chinese||[]).push([[210],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return d}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var a=n.createContext({}),l=function(e){var t=n.useContext(a),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},c=function(e){var t=l(e.components);return n.createElement(a.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,a=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=l(r),d=o,f=m["".concat(a,".").concat(d)]||m[d]||u[d]||i;return r?n.createElement(f,p(p({ref:t},c),{},{components:r})):n.createElement(f,p({ref:t},c))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,p=new Array(i);p[0]=m;var s={};for(var a in t)hasOwnProperty.call(t,a)&&(s[a]=t[a]);s.originalType=e,s.mdxType="string"==typeof e?e:o,p[1]=s;for(var l=2;l<i;l++)p[l]=r[l];return n.createElement.apply(null,p)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},319:function(e,t,r){r.r(t),r.d(t,{assets:function(){return c},contentTitle:function(){return a},default:function(){return d},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return u}});var n=r(3117),o=r(102),i=(r(7294),r(3905)),p=["components"],s={},a="no-restricted-imports",l={unversionedId:"no-restricted-imports",id:"no-restricted-imports",title:"no-restricted-imports",description:"Disallows specified modules when loaded by import.",source:"@site/rules/no-restricted-imports.md",sourceDirName:".",slug:"/no-restricted-imports",permalink:"/typescript-eslint-chinese/rules/no-restricted-imports",draft:!1,tags:[],version:"current",lastUpdatedBy:"GEARLESS JOE",lastUpdatedAt:1657247748,formattedLastUpdatedAt:"2022\u5e747\u67088\u65e5",frontMatter:{},sidebar:"rules",previous:{title:"no-require-imports",permalink:"/typescript-eslint-chinese/rules/no-require-imports"},next:{title:"no-shadow",permalink:"/typescript-eslint-chinese/rules/no-shadow"}},c={},u=[{value:"Rule Details",id:"rule-details",level:2},{value:"How to Use",id:"how-to-use",level:2},{value:"Options",id:"options",level:2},{value:"<code>allowTypeImports</code>",id:"allowtypeimports",level:3},{value:"\u274c Incorrect",id:"-incorrect",level:4},{value:"\u2705 Correct",id:"-correct",level:4}],m={toc:u};function d(e){var t=e.components,r=(0,o.Z)(e,p);return(0,i.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"no-restricted-imports"},(0,i.kt)("inlineCode",{parentName:"h1"},"no-restricted-imports")),(0,i.kt)("p",null,"Disallows specified modules when loaded by ",(0,i.kt)("inlineCode",{parentName:"p"},"import"),"."),(0,i.kt)("h2",{id:"rule-details"},"Rule Details"),(0,i.kt)("p",null,"This rule extends the base ",(0,i.kt)("a",{parentName:"p",href:"https://eslint.org/docs/rules/no-restricted-imports"},(0,i.kt)("inlineCode",{parentName:"a"},"eslint/no-restricted-imports"))," rule."),(0,i.kt)("h2",{id:"how-to-use"},"How to Use"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsonc"},'{\n  // note you must disable the base rule as it can report incorrect errors\n  "no-restricted-imports": "off",\n  "@typescript-eslint/no-restricted-imports": ["error"]\n}\n')),(0,i.kt)("h2",{id:"options"},"Options"),(0,i.kt)("p",null,"See ",(0,i.kt)("a",{parentName:"p",href:"https://eslint.org/docs/rules/no-restricted-imports#options"},(0,i.kt)("inlineCode",{parentName:"a"},"eslint/no-restricted-imports")," options"),".\nThis rule adds the following options:"),(0,i.kt)("h3",{id:"allowtypeimports"},(0,i.kt)("inlineCode",{parentName:"h3"},"allowTypeImports")),(0,i.kt)("p",null,"(default: ",(0,i.kt)("inlineCode",{parentName:"p"},"false"),")"),(0,i.kt)("p",null,"You can specify this option for a specific path or pattern as follows:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsonc"},'"@typescript-eslint/no-restricted-imports": ["error", {\n  "paths": [{\n    "name": "import-foo",\n    "message": "Please use import-bar instead.",\n    "allowTypeImports": true\n  }, {\n    "name": "import-baz",\n    "message": "Please use import-quux instead.",\n    "allowTypeImports": true\n  }]\n}]\n')),(0,i.kt)("p",null,"When set to ",(0,i.kt)("inlineCode",{parentName:"p"},"true"),", the rule will allow ",(0,i.kt)("a",{parentName:"p",href:"https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-8.html#type-only-imports-and-export"},"Type-Only Imports"),"."),(0,i.kt)("p",null,"Examples of code with the above config:"),(0,i.kt)("h4",{id:"-incorrect"},"\u274c Incorrect"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'import foo from "import-foo";\nexport { Foo } from "import-foo";\n\nimport baz from "import-baz";\nexport { Baz } from "import-baz";\n')),(0,i.kt)("h4",{id:"-correct"},"\u2705 Correct"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'import { foo } from "other-module";\n\nimport type foo from "import-foo";\nexport type { Foo } from "import-foo";\n\nimport type baz from "import-baz";\nexport type { Baz } from "import-baz";\n')))}d.isMDXComponent=!0}}]);